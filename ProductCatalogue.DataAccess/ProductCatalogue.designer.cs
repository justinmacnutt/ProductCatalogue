#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductCatalogue.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProductCatalogue3")]
	public partial class TourismDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttributeGroupProductType(AttributeGroupProductType instance);
    partial void UpdateAttributeGroupProductType(AttributeGroupProductType instance);
    partial void DeleteAttributeGroupProductType(AttributeGroupProductType instance);
    partial void InsertAttribute(Attribute instance);
    partial void UpdateAttribute(Attribute instance);
    partial void DeleteAttribute(Attribute instance);
    partial void InsertAttributeGroup(AttributeGroup instance);
    partial void UpdateAttributeGroup(AttributeGroup instance);
    partial void DeleteAttributeGroup(AttributeGroup instance);
    partial void InsertBusiness(Business instance);
    partial void UpdateBusiness(Business instance);
    partial void DeleteBusiness(Business instance);
    partial void InsertBusinessAddress(BusinessAddress instance);
    partial void UpdateBusinessAddress(BusinessAddress instance);
    partial void DeleteBusinessAddress(BusinessAddress instance);
    partial void InsertBusinessNote(BusinessNote instance);
    partial void UpdateBusinessNote(BusinessNote instance);
    partial void DeleteBusinessNote(BusinessNote instance);
    partial void InsertContactAddress(ContactAddress instance);
    partial void UpdateContactAddress(ContactAddress instance);
    partial void DeleteContactAddress(ContactAddress instance);
    partial void InsertContactNote(ContactNote instance);
    partial void UpdateContactNote(ContactNote instance);
    partial void DeleteContactNote(ContactNote instance);
    partial void InsertContactPhone(ContactPhone instance);
    partial void UpdateContactPhone(ContactPhone instance);
    partial void DeleteContactPhone(ContactPhone instance);
    partial void InsertContactProduct(ContactProduct instance);
    partial void UpdateContactProduct(ContactProduct instance);
    partial void DeleteContactProduct(ContactProduct instance);
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertMediaTranslation(MediaTranslation instance);
    partial void UpdateMediaTranslation(MediaTranslation instance);
    partial void DeleteMediaTranslation(MediaTranslation instance);
    partial void InsertNote(Note instance);
    partial void UpdateNote(Note instance);
    partial void DeleteNote(Note instance);
    partial void InsertPhone(Phone instance);
    partial void UpdatePhone(Phone instance);
    partial void DeletePhone(Phone instance);
    partial void InsertPrintVersionTranslation(PrintVersionTranslation instance);
    partial void UpdatePrintVersionTranslation(PrintVersionTranslation instance);
    partial void DeletePrintVersionTranslation(PrintVersionTranslation instance);
    partial void InsertProductAttribute(ProductAttribute instance);
    partial void UpdateProductAttribute(ProductAttribute instance);
    partial void DeleteProductAttribute(ProductAttribute instance);
    partial void InsertProductDescription(ProductDescription instance);
    partial void UpdateProductDescription(ProductDescription instance);
    partial void DeleteProductDescription(ProductDescription instance);
    partial void InsertProductNote(ProductNote instance);
    partial void UpdateProductNote(ProductNote instance);
    partial void DeleteProductNote(ProductNote instance);
    partial void InsertProductPaymentType(ProductPaymentType instance);
    partial void UpdateProductPaymentType(ProductPaymentType instance);
    partial void DeleteProductPaymentType(ProductPaymentType instance);
    partial void InsertProductRegionOfOperation(ProductRegionOfOperation instance);
    partial void UpdateProductRegionOfOperation(ProductRegionOfOperation instance);
    partial void DeleteProductRegionOfOperation(ProductRegionOfOperation instance);
    partial void InsertProductTranslation(ProductTranslation instance);
    partial void UpdateProductTranslation(ProductTranslation instance);
    partial void DeleteProductTranslation(ProductTranslation instance);
    partial void InsertrefProvinceState(refProvinceState instance);
    partial void UpdaterefProvinceState(refProvinceState instance);
    partial void DeleterefProvinceState(refProvinceState instance);
    partial void InsertTranslationStatus(TranslationStatus instance);
    partial void UpdateTranslationStatus(TranslationStatus instance);
    partial void DeleteTranslationStatus(TranslationStatus instance);
    partial void InsertUrl(Url instance);
    partial void UpdateUrl(Url instance);
    partial void DeleteUrl(Url instance);
    partial void InsertUrlTranslation(UrlTranslation instance);
    partial void UpdateUrlTranslation(UrlTranslation instance);
    partial void DeleteUrlTranslation(UrlTranslation instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertUserProfileRole(UserProfileRole instance);
    partial void UpdateUserProfileRole(UserProfileRole instance);
    partial void DeleteUserProfileRole(UserProfileRole instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertVersionHistory(VersionHistory instance);
    partial void UpdateVersionHistory(VersionHistory instance);
    partial void DeleteVersionHistory(VersionHistory instance);
    partial void InsertProductCaaRating(ProductCaaRating instance);
    partial void UpdateProductCaaRating(ProductCaaRating instance);
    partial void DeleteProductCaaRating(ProductCaaRating instance);
    partial void InsertProductCanadaSelectRating(ProductCanadaSelectRating instance);
    partial void UpdateProductCanadaSelectRating(ProductCanadaSelectRating instance);
    partial void DeleteProductCanadaSelectRating(ProductCanadaSelectRating instance);
    partial void InsertrefProductField(refProductField instance);
    partial void UpdaterefProductField(refProductField instance);
    partial void DeleterefProductField(refProductField instance);
    partial void InsertrefGuideSection(refGuideSection instance);
    partial void UpdaterefGuideSection(refGuideSection instance);
    partial void DeleterefGuideSection(refGuideSection instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertrefCountry(refCountry instance);
    partial void UpdaterefCountry(refCountry instance);
    partial void DeleterefCountry(refCountry instance);
    partial void InsertPrintVersion(PrintVersion instance);
    partial void UpdatePrintVersion(PrintVersion instance);
    partial void DeletePrintVersion(PrintVersion instance);
    partial void InsertFileMakerArchive(FileMakerArchive instance);
    partial void UpdateFileMakerArchive(FileMakerArchive instance);
    partial void DeleteFileMakerArchive(FileMakerArchive instance);
    partial void InsertrefSubRegion(refSubRegion instance);
    partial void UpdaterefSubRegion(refSubRegion instance);
    partial void DeleterefSubRegion(refSubRegion instance);
    partial void InsertrefRegion(refRegion instance);
    partial void UpdaterefRegion(refRegion instance);
    partial void DeleterefRegion(refRegion instance);
    partial void InsertrefCounty(refCounty instance);
    partial void UpdaterefCounty(refCounty instance);
    partial void DeleterefCounty(refCounty instance);
    partial void InsertrefCommunity(refCommunity instance);
    partial void UpdaterefCommunity(refCommunity instance);
    partial void DeleterefCommunity(refCommunity instance);
    partial void InsertProductUnitNumber(ProductUnitNumber instance);
    partial void UpdateProductUnitNumber(ProductUnitNumber instance);
    partial void DeleteProductUnitNumber(ProductUnitNumber instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertOperationPeriod(OperationPeriod instance);
    partial void UpdateOperationPeriod(OperationPeriod instance);
    partial void DeleteOperationPeriod(OperationPeriod instance);
    partial void InsertProductTag(ProductTag instance);
    partial void UpdateProductTag(ProductTag instance);
    partial void DeleteProductTag(ProductTag instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertPromotionPeriod(PromotionPeriod instance);
    partial void UpdatePromotionPeriod(PromotionPeriod instance);
    partial void DeletePromotionPeriod(PromotionPeriod instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public TourismDataContext() : 
				base("Data Source=WIN-UFFK2H06NO6\\sqlexpress;Initial Catalog=ProductCatalogue3;Integrat" +
						"ed Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public TourismDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourismDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourismDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourismDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AttributeGroupProductType> AttributeGroupProductTypes
		{
			get
			{
				return this.GetTable<AttributeGroupProductType>();
			}
		}
		
		public System.Data.Linq.Table<Attribute> Attributes
		{
			get
			{
				return this.GetTable<Attribute>();
			}
		}
		
		public System.Data.Linq.Table<AttributeGroup> AttributeGroups
		{
			get
			{
				return this.GetTable<AttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<Business> Businesses
		{
			get
			{
				return this.GetTable<Business>();
			}
		}
		
		public System.Data.Linq.Table<BusinessAddress> BusinessAddresses
		{
			get
			{
				return this.GetTable<BusinessAddress>();
			}
		}
		
		public System.Data.Linq.Table<BusinessNote> BusinessNotes
		{
			get
			{
				return this.GetTable<BusinessNote>();
			}
		}
		
		public System.Data.Linq.Table<ContactAddress> ContactAddresses
		{
			get
			{
				return this.GetTable<ContactAddress>();
			}
		}
		
		public System.Data.Linq.Table<ContactNote> ContactNotes
		{
			get
			{
				return this.GetTable<ContactNote>();
			}
		}
		
		public System.Data.Linq.Table<ContactPhone> ContactPhones
		{
			get
			{
				return this.GetTable<ContactPhone>();
			}
		}
		
		public System.Data.Linq.Table<ContactProduct> ContactProducts
		{
			get
			{
				return this.GetTable<ContactProduct>();
			}
		}
		
		public System.Data.Linq.Table<Media> Medias
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<MediaTranslation> MediaTranslations
		{
			get
			{
				return this.GetTable<MediaTranslation>();
			}
		}
		
		public System.Data.Linq.Table<Note> Notes
		{
			get
			{
				return this.GetTable<Note>();
			}
		}
		
		public System.Data.Linq.Table<Phone> Phones
		{
			get
			{
				return this.GetTable<Phone>();
			}
		}
		
		public System.Data.Linq.Table<PrintVersionTranslation> PrintVersionTranslations
		{
			get
			{
				return this.GetTable<PrintVersionTranslation>();
			}
		}
		
		public System.Data.Linq.Table<ProductAttribute> ProductAttributes
		{
			get
			{
				return this.GetTable<ProductAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ProductDescription> ProductDescriptions
		{
			get
			{
				return this.GetTable<ProductDescription>();
			}
		}
		
		public System.Data.Linq.Table<ProductNote> ProductNotes
		{
			get
			{
				return this.GetTable<ProductNote>();
			}
		}
		
		public System.Data.Linq.Table<ProductPaymentType> ProductPaymentTypes
		{
			get
			{
				return this.GetTable<ProductPaymentType>();
			}
		}
		
		public System.Data.Linq.Table<ProductRegionOfOperation> ProductRegionOfOperations
		{
			get
			{
				return this.GetTable<ProductRegionOfOperation>();
			}
		}
		
		public System.Data.Linq.Table<ProductTranslation> ProductTranslations
		{
			get
			{
				return this.GetTable<ProductTranslation>();
			}
		}
		
		public System.Data.Linq.Table<refProvinceState> refProvinceStates
		{
			get
			{
				return this.GetTable<refProvinceState>();
			}
		}
		
		public System.Data.Linq.Table<TranslationStatus> TranslationStatus
		{
			get
			{
				return this.GetTable<TranslationStatus>();
			}
		}
		
		public System.Data.Linq.Table<Url> Urls
		{
			get
			{
				return this.GetTable<Url>();
			}
		}
		
		public System.Data.Linq.Table<UrlTranslation> UrlTranslations
		{
			get
			{
				return this.GetTable<UrlTranslation>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<UserProfileRole> UserProfileRoles
		{
			get
			{
				return this.GetTable<UserProfileRole>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<VersionHistory> VersionHistories
		{
			get
			{
				return this.GetTable<VersionHistory>();
			}
		}
		
		public System.Data.Linq.Table<ProductCaaRating> ProductCaaRatings
		{
			get
			{
				return this.GetTable<ProductCaaRating>();
			}
		}
		
		public System.Data.Linq.Table<ProductCanadaSelectRating> ProductCanadaSelectRatings
		{
			get
			{
				return this.GetTable<ProductCanadaSelectRating>();
			}
		}
		
		public System.Data.Linq.Table<refProductField> refProductFields
		{
			get
			{
				return this.GetTable<refProductField>();
			}
		}
		
		public System.Data.Linq.Table<refGuideSection> refGuideSections
		{
			get
			{
				return this.GetTable<refGuideSection>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<refCountry> refCountries
		{
			get
			{
				return this.GetTable<refCountry>();
			}
		}
		
		public System.Data.Linq.Table<PrintVersion> PrintVersions
		{
			get
			{
				return this.GetTable<PrintVersion>();
			}
		}
		
		public System.Data.Linq.Table<FileMakerArchive> FileMakerArchives
		{
			get
			{
				return this.GetTable<FileMakerArchive>();
			}
		}
		
		public System.Data.Linq.Table<refSubRegion> refSubRegions
		{
			get
			{
				return this.GetTable<refSubRegion>();
			}
		}
		
		public System.Data.Linq.Table<refRegion> refRegions
		{
			get
			{
				return this.GetTable<refRegion>();
			}
		}
		
		public System.Data.Linq.Table<refCounty> refCounties
		{
			get
			{
				return this.GetTable<refCounty>();
			}
		}
		
		public System.Data.Linq.Table<refCommunity> refCommunities
		{
			get
			{
				return this.GetTable<refCommunity>();
			}
		}
		
		public System.Data.Linq.Table<ProductUnitNumber> ProductUnitNumbers
		{
			get
			{
				return this.GetTable<ProductUnitNumber>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<OperationPeriod> OperationPeriods
		{
			get
			{
				return this.GetTable<OperationPeriod>();
			}
		}
		
		public System.Data.Linq.Table<ProductTag> ProductTags
		{
			get
			{
				return this.GetTable<ProductTag>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<PromotionPeriod> PromotionPeriods
		{
			get
			{
				return this.GetTable<PromotionPeriod>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchBusinesses")]
		public ISingleResult<SearchBusinessesResult> SearchBusinesses([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> businessId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string businessName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string communityName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string filterLetter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), businessId, businessName, communityName, filterLetter);
			return ((ISingleResult<SearchBusinessesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBusinessNames")]
		public ISingleResult<GetBusinessNamesResult> GetBusinessNames([global::System.Data.Linq.Mapping.ParameterAttribute(Name="string", DbType="VarChar(50)")] string @string)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @string);
			return ((ISingleResult<GetBusinessNamesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchProducts")]
		public ISingleResult<SearchProductsResult> SearchProducts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> productTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> communityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> regionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string checkInId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string fileMakerId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string licenseNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string businessName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string contactFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string contactLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string filterLetter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> isValid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> overrideErrors)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId, productName, productTypeId, communityId, regionId, checkInId, fileMakerId, licenseNumber, businessName, contactFirstName, contactLastName, filterLetter, isActive, isValid, overrideErrors);
			return ((ISingleResult<SearchProductsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchContacts")]
		public ISingleResult<SearchContactsResult> SearchContacts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> contactId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string telephone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string businessName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string communityName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string filterLetter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactId, firstName, lastName, telephone, email, businessName, communityName, filterLetter);
			return ((ISingleResult<SearchContactsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeGroupProductType")]
	public partial class AttributeGroupProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _attributeGroupId;
		
		private byte _productTypeId;
		
		private EntityRef<AttributeGroup> _AttributeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnattributeGroupIdChanging(short value);
    partial void OnattributeGroupIdChanged();
    partial void OnproductTypeIdChanging(byte value);
    partial void OnproductTypeIdChanged();
    #endregion
		
		public AttributeGroupProductType()
		{
			this._AttributeGroup = default(EntityRef<AttributeGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeGroupId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short attributeGroupId
		{
			get
			{
				return this._attributeGroupId;
			}
			set
			{
				if ((this._attributeGroupId != value))
				{
					if (this._AttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnattributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._attributeGroupId = value;
					this.SendPropertyChanged("attributeGroupId");
					this.OnattributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte productTypeId
		{
			get
			{
				return this._productTypeId;
			}
			set
			{
				if ((this._productTypeId != value))
				{
					this.OnproductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._productTypeId = value;
					this.SendPropertyChanged("productTypeId");
					this.OnproductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeGroup_AttributeGroupProductType", Storage="_AttributeGroup", ThisKey="attributeGroupId", OtherKey="id", IsForeignKey=true)]
		public AttributeGroup AttributeGroup
		{
			get
			{
				return this._AttributeGroup.Entity;
			}
			set
			{
				AttributeGroup previousValue = this._AttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._AttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeGroup.Entity = null;
						previousValue.AttributeGroupProductTypes.Remove(this);
					}
					this._AttributeGroup.Entity = value;
					if ((value != null))
					{
						value.AttributeGroupProductTypes.Add(this);
						this._attributeGroupId = value.id;
					}
					else
					{
						this._attributeGroupId = default(short);
					}
					this.SendPropertyChanged("AttributeGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attribute")]
	public partial class Attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _attributeName;
		
		private short _attributeGroupId;
		
		private EntitySet<ProductAttribute> _ProductAttributes;
		
		private EntityRef<AttributeGroup> _AttributeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OnattributeNameChanging(string value);
    partial void OnattributeNameChanged();
    partial void OnattributeGroupIdChanging(short value);
    partial void OnattributeGroupIdChanged();
    #endregion
		
		public Attribute()
		{
			this._ProductAttributes = new EntitySet<ProductAttribute>(new Action<ProductAttribute>(this.attach_ProductAttributes), new Action<ProductAttribute>(this.detach_ProductAttributes));
			this._AttributeGroup = default(EntityRef<AttributeGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string attributeName
		{
			get
			{
				return this._attributeName;
			}
			set
			{
				if ((this._attributeName != value))
				{
					this.OnattributeNameChanging(value);
					this.SendPropertyChanging();
					this._attributeName = value;
					this.SendPropertyChanged("attributeName");
					this.OnattributeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeGroupId", DbType="SmallInt NOT NULL")]
		public short attributeGroupId
		{
			get
			{
				return this._attributeGroupId;
			}
			set
			{
				if ((this._attributeGroupId != value))
				{
					if (this._AttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnattributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._attributeGroupId = value;
					this.SendPropertyChanged("attributeGroupId");
					this.OnattributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attribute_ProductAttribute", Storage="_ProductAttributes", ThisKey="id,attributeGroupId", OtherKey="attributeId,attributeGroupId")]
		public EntitySet<ProductAttribute> ProductAttributes
		{
			get
			{
				return this._ProductAttributes;
			}
			set
			{
				this._ProductAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeGroup_Attribute", Storage="_AttributeGroup", ThisKey="attributeGroupId", OtherKey="id", IsForeignKey=true)]
		public AttributeGroup AttributeGroup
		{
			get
			{
				return this._AttributeGroup.Entity;
			}
			set
			{
				AttributeGroup previousValue = this._AttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._AttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeGroup.Entity = null;
						previousValue.Attributes.Remove(this);
					}
					this._AttributeGroup.Entity = value;
					if ((value != null))
					{
						value.Attributes.Add(this);
						this._attributeGroupId = value.id;
					}
					else
					{
						this._attributeGroupId = default(short);
					}
					this.SendPropertyChanged("AttributeGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Attribute = this;
		}
		
		private void detach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Attribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeGroup")]
	public partial class AttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _attributeGroupName;
		
		private EntitySet<AttributeGroupProductType> _AttributeGroupProductTypes;
		
		private EntitySet<Attribute> _Attributes;
		
		private EntitySet<ProductAttribute> _ProductAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OnattributeGroupNameChanging(string value);
    partial void OnattributeGroupNameChanged();
    #endregion
		
		public AttributeGroup()
		{
			this._AttributeGroupProductTypes = new EntitySet<AttributeGroupProductType>(new Action<AttributeGroupProductType>(this.attach_AttributeGroupProductTypes), new Action<AttributeGroupProductType>(this.detach_AttributeGroupProductTypes));
			this._Attributes = new EntitySet<Attribute>(new Action<Attribute>(this.attach_Attributes), new Action<Attribute>(this.detach_Attributes));
			this._ProductAttributes = new EntitySet<ProductAttribute>(new Action<ProductAttribute>(this.attach_ProductAttributes), new Action<ProductAttribute>(this.detach_ProductAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeGroupName", DbType="VarChar(100)")]
		public string attributeGroupName
		{
			get
			{
				return this._attributeGroupName;
			}
			set
			{
				if ((this._attributeGroupName != value))
				{
					this.OnattributeGroupNameChanging(value);
					this.SendPropertyChanging();
					this._attributeGroupName = value;
					this.SendPropertyChanged("attributeGroupName");
					this.OnattributeGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeGroup_AttributeGroupProductType", Storage="_AttributeGroupProductTypes", ThisKey="id", OtherKey="attributeGroupId")]
		public EntitySet<AttributeGroupProductType> AttributeGroupProductTypes
		{
			get
			{
				return this._AttributeGroupProductTypes;
			}
			set
			{
				this._AttributeGroupProductTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeGroup_Attribute", Storage="_Attributes", ThisKey="id", OtherKey="attributeGroupId")]
		public EntitySet<Attribute> Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				this._Attributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeGroup_ProductAttribute", Storage="_ProductAttributes", ThisKey="id", OtherKey="attributeGroupId")]
		public EntitySet<ProductAttribute> ProductAttributes
		{
			get
			{
				return this._ProductAttributes;
			}
			set
			{
				this._ProductAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttributeGroupProductTypes(AttributeGroupProductType entity)
		{
			this.SendPropertyChanging();
			entity.AttributeGroup = this;
		}
		
		private void detach_AttributeGroupProductTypes(AttributeGroupProductType entity)
		{
			this.SendPropertyChanging();
			entity.AttributeGroup = null;
		}
		
		private void attach_Attributes(Attribute entity)
		{
			this.SendPropertyChanging();
			entity.AttributeGroup = this;
		}
		
		private void detach_Attributes(Attribute entity)
		{
			this.SendPropertyChanging();
			entity.AttributeGroup = null;
		}
		
		private void attach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.AttributeGroup = this;
		}
		
		private void detach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.AttributeGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Business")]
	public partial class Business : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _businessName;
		
		private string _description;
		
		private bool _isDeleted;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<BusinessAddress> _BusinessAddresses;
		
		private EntitySet<BusinessNote> _BusinessNotes;
		
		private EntitySet<Contact> _Contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbusinessNameChanging(string value);
    partial void OnbusinessNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Business()
		{
			this._BusinessAddresses = new EntitySet<BusinessAddress>(new Action<BusinessAddress>(this.attach_BusinessAddresses), new Action<BusinessAddress>(this.detach_BusinessAddresses));
			this._BusinessNotes = new EntitySet<BusinessNote>(new Action<BusinessNote>(this.attach_BusinessNotes), new Action<BusinessNote>(this.detach_BusinessNotes));
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessName", DbType="NVarChar(300)")]
		public string businessName
		{
			get
			{
				return this._businessName;
			}
			set
			{
				if ((this._businessName != value))
				{
					this.OnbusinessNameChanging(value);
					this.SendPropertyChanging();
					this._businessName = value;
					this.SendPropertyChanged("businessName");
					this.OnbusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_BusinessAddress", Storage="_BusinessAddresses", ThisKey="id", OtherKey="businessId")]
		public EntitySet<BusinessAddress> BusinessAddresses
		{
			get
			{
				return this._BusinessAddresses;
			}
			set
			{
				this._BusinessAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_BusinessNote", Storage="_BusinessNotes", ThisKey="id", OtherKey="businessId")]
		public EntitySet<BusinessNote> BusinessNotes
		{
			get
			{
				return this._BusinessNotes;
			}
			set
			{
				this._BusinessNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Contact", Storage="_Contacts", ThisKey="id", OtherKey="businessId")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessAddresses(BusinessAddress entity)
		{
			this.SendPropertyChanging();
			entity.Business = this;
		}
		
		private void detach_BusinessAddresses(BusinessAddress entity)
		{
			this.SendPropertyChanging();
			entity.Business = null;
		}
		
		private void attach_BusinessNotes(BusinessNote entity)
		{
			this.SendPropertyChanging();
			entity.Business = this;
		}
		
		private void detach_BusinessNotes(BusinessNote entity)
		{
			this.SendPropertyChanging();
			entity.Business = null;
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Business = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Business = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessAddress")]
	public partial class BusinessAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _businessId;
		
		private int _addressId;
		
		private EntityRef<Business> _Business;
		
		private EntityRef<Address> _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbusinessIdChanging(int value);
    partial void OnbusinessIdChanged();
    partial void OnaddressIdChanging(int value);
    partial void OnaddressIdChanged();
    #endregion
		
		public BusinessAddress()
		{
			this._Business = default(EntityRef<Business>);
			this._Address = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int businessId
		{
			get
			{
				return this._businessId;
			}
			set
			{
				if ((this._businessId != value))
				{
					if (this._Business.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessIdChanging(value);
					this.SendPropertyChanging();
					this._businessId = value;
					this.SendPropertyChanged("businessId");
					this.OnbusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_BusinessAddress", Storage="_Business", ThisKey="businessId", OtherKey="id", IsForeignKey=true)]
		public Business Business
		{
			get
			{
				return this._Business.Entity;
			}
			set
			{
				Business previousValue = this._Business.Entity;
				if (((previousValue != value) 
							|| (this._Business.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business.Entity = null;
						previousValue.BusinessAddresses.Remove(this);
					}
					this._Business.Entity = value;
					if ((value != null))
					{
						value.BusinessAddresses.Add(this);
						this._businessId = value.id;
					}
					else
					{
						this._businessId = default(int);
					}
					this.SendPropertyChanged("Business");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_BusinessAddress", Storage="_Address", ThisKey="addressId", OtherKey="id", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.BusinessAddresses.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.BusinessAddresses.Add(this);
						this._addressId = value.id;
					}
					else
					{
						this._addressId = default(int);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessNote")]
	public partial class BusinessNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _businessId;
		
		private int _noteId;
		
		private EntityRef<Business> _Business;
		
		private EntityRef<Note> _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbusinessIdChanging(int value);
    partial void OnbusinessIdChanged();
    partial void OnnoteIdChanging(int value);
    partial void OnnoteIdChanged();
    #endregion
		
		public BusinessNote()
		{
			this._Business = default(EntityRef<Business>);
			this._Note = default(EntityRef<Note>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int businessId
		{
			get
			{
				return this._businessId;
			}
			set
			{
				if ((this._businessId != value))
				{
					if (this._Business.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessIdChanging(value);
					this.SendPropertyChanging();
					this._businessId = value;
					this.SendPropertyChanged("businessId");
					this.OnbusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int noteId
		{
			get
			{
				return this._noteId;
			}
			set
			{
				if ((this._noteId != value))
				{
					if (this._Note.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnoteIdChanging(value);
					this.SendPropertyChanging();
					this._noteId = value;
					this.SendPropertyChanged("noteId");
					this.OnnoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_BusinessNote", Storage="_Business", ThisKey="businessId", OtherKey="id", IsForeignKey=true)]
		public Business Business
		{
			get
			{
				return this._Business.Entity;
			}
			set
			{
				Business previousValue = this._Business.Entity;
				if (((previousValue != value) 
							|| (this._Business.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business.Entity = null;
						previousValue.BusinessNotes.Remove(this);
					}
					this._Business.Entity = value;
					if ((value != null))
					{
						value.BusinessNotes.Add(this);
						this._businessId = value.id;
					}
					else
					{
						this._businessId = default(int);
					}
					this.SendPropertyChanged("Business");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_BusinessNote", Storage="_Note", ThisKey="noteId", OtherKey="id", IsForeignKey=true)]
		public Note Note
		{
			get
			{
				return this._Note.Entity;
			}
			set
			{
				Note previousValue = this._Note.Entity;
				if (((previousValue != value) 
							|| (this._Note.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Note.Entity = null;
						previousValue.BusinessNotes.Remove(this);
					}
					this._Note.Entity = value;
					if ((value != null))
					{
						value.BusinessNotes.Add(this);
						this._noteId = value.id;
					}
					else
					{
						this._noteId = default(int);
					}
					this.SendPropertyChanged("Note");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactAddress")]
	public partial class ContactAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactId;
		
		private int _addressId;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactIdChanging(int value);
    partial void OncontactIdChanged();
    partial void OnaddressIdChanging(int value);
    partial void OnaddressIdChanged();
    #endregion
		
		public ContactAddress()
		{
			this._Address = default(EntityRef<Address>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactIdChanging(value);
					this.SendPropertyChanging();
					this._contactId = value;
					this.SendPropertyChanged("contactId");
					this.OncontactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ContactAddress", Storage="_Address", ThisKey="addressId", OtherKey="id", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ContactAddresses.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ContactAddresses.Add(this);
						this._addressId = value.id;
					}
					else
					{
						this._addressId = default(int);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactAddress", Storage="_Contact", ThisKey="contactId", OtherKey="id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactAddresses.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactAddresses.Add(this);
						this._contactId = value.id;
					}
					else
					{
						this._contactId = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactNote")]
	public partial class ContactNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactId;
		
		private int _noteId;
		
		private EntityRef<Note> _Note;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactIdChanging(int value);
    partial void OncontactIdChanged();
    partial void OnnoteIdChanging(int value);
    partial void OnnoteIdChanged();
    #endregion
		
		public ContactNote()
		{
			this._Note = default(EntityRef<Note>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactIdChanging(value);
					this.SendPropertyChanging();
					this._contactId = value;
					this.SendPropertyChanged("contactId");
					this.OncontactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int noteId
		{
			get
			{
				return this._noteId;
			}
			set
			{
				if ((this._noteId != value))
				{
					if (this._Note.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnoteIdChanging(value);
					this.SendPropertyChanging();
					this._noteId = value;
					this.SendPropertyChanged("noteId");
					this.OnnoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_ContactNote", Storage="_Note", ThisKey="noteId", OtherKey="id", IsForeignKey=true)]
		public Note Note
		{
			get
			{
				return this._Note.Entity;
			}
			set
			{
				Note previousValue = this._Note.Entity;
				if (((previousValue != value) 
							|| (this._Note.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Note.Entity = null;
						previousValue.ContactNotes.Remove(this);
					}
					this._Note.Entity = value;
					if ((value != null))
					{
						value.ContactNotes.Add(this);
						this._noteId = value.id;
					}
					else
					{
						this._noteId = default(int);
					}
					this.SendPropertyChanged("Note");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactNote", Storage="_Contact", ThisKey="contactId", OtherKey="id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactNotes.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactNotes.Add(this);
						this._contactId = value.id;
					}
					else
					{
						this._contactId = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactPhone")]
	public partial class ContactPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactId;
		
		private int _phoneId;
		
		private EntityRef<Phone> _Phone;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactIdChanging(int value);
    partial void OncontactIdChanged();
    partial void OnphoneIdChanging(int value);
    partial void OnphoneIdChanged();
    #endregion
		
		public ContactPhone()
		{
			this._Phone = default(EntityRef<Phone>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactIdChanging(value);
					this.SendPropertyChanging();
					this._contactId = value;
					this.SendPropertyChanged("contactId");
					this.OncontactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int phoneId
		{
			get
			{
				return this._phoneId;
			}
			set
			{
				if ((this._phoneId != value))
				{
					if (this._Phone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnphoneIdChanging(value);
					this.SendPropertyChanging();
					this._phoneId = value;
					this.SendPropertyChanged("phoneId");
					this.OnphoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phone_ContactPhone", Storage="_Phone", ThisKey="phoneId", OtherKey="id", IsForeignKey=true)]
		public Phone Phone
		{
			get
			{
				return this._Phone.Entity;
			}
			set
			{
				Phone previousValue = this._Phone.Entity;
				if (((previousValue != value) 
							|| (this._Phone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phone.Entity = null;
						previousValue.ContactPhones.Remove(this);
					}
					this._Phone.Entity = value;
					if ((value != null))
					{
						value.ContactPhones.Add(this);
						this._phoneId = value.id;
					}
					else
					{
						this._phoneId = default(int);
					}
					this.SendPropertyChanged("Phone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactPhone", Storage="_Contact", ThisKey="contactId", OtherKey="id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactPhones.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactPhones.Add(this);
						this._contactId = value.id;
					}
					else
					{
						this._contactId = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactProduct")]
	public partial class ContactProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactId;
		
		private int _productId;
		
		private byte _contactTypeId;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactIdChanging(int value);
    partial void OncontactIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OncontactTypeIdChanging(byte value);
    partial void OncontactTypeIdChanged();
    #endregion
		
		public ContactProduct()
		{
			this._Contact = default(EntityRef<Contact>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactIdChanging(value);
					this.SendPropertyChanging();
					this._contactId = value;
					this.SendPropertyChanged("contactId");
					this.OncontactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactTypeId", DbType="TinyInt NOT NULL")]
		public byte contactTypeId
		{
			get
			{
				return this._contactTypeId;
			}
			set
			{
				if ((this._contactTypeId != value))
				{
					this.OncontactTypeIdChanging(value);
					this.SendPropertyChanging();
					this._contactTypeId = value;
					this.SendPropertyChanged("contactTypeId");
					this.OncontactTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactProduct", Storage="_Contact", ThisKey="contactId", OtherKey="id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactProducts.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactProducts.Add(this);
						this._contactId = value.id;
					}
					else
					{
						this._contactId = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ContactProduct", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ContactProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ContactProducts.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Media")]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _originalFileName;
		
		private string _fileExtension;
		
		private int _productId;
		
		private byte _mediaTypeId;
		
		private System.Nullable<byte> _mediaLanguageId;
		
		private System.Nullable<short> _sortOrder;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<MediaTranslation> _MediaTranslations;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoriginalFileNameChanging(string value);
    partial void OnoriginalFileNameChanged();
    partial void OnfileExtensionChanging(string value);
    partial void OnfileExtensionChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnmediaTypeIdChanging(byte value);
    partial void OnmediaTypeIdChanged();
    partial void OnmediaLanguageIdChanging(System.Nullable<byte> value);
    partial void OnmediaLanguageIdChanged();
    partial void OnsortOrderChanging(System.Nullable<short> value);
    partial void OnsortOrderChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Media()
		{
			this._MediaTranslations = new EntitySet<MediaTranslation>(new Action<MediaTranslation>(this.attach_MediaTranslations), new Action<MediaTranslation>(this.detach_MediaTranslations));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalFileName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string originalFileName
		{
			get
			{
				return this._originalFileName;
			}
			set
			{
				if ((this._originalFileName != value))
				{
					this.OnoriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._originalFileName = value;
					this.SendPropertyChanged("originalFileName");
					this.OnoriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileExtension", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fileExtension
		{
			get
			{
				return this._fileExtension;
			}
			set
			{
				if ((this._fileExtension != value))
				{
					this.OnfileExtensionChanging(value);
					this.SendPropertyChanging();
					this._fileExtension = value;
					this.SendPropertyChanged("fileExtension");
					this.OnfileExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mediaTypeId", DbType="TinyInt NOT NULL")]
		public byte mediaTypeId
		{
			get
			{
				return this._mediaTypeId;
			}
			set
			{
				if ((this._mediaTypeId != value))
				{
					this.OnmediaTypeIdChanging(value);
					this.SendPropertyChanging();
					this._mediaTypeId = value;
					this.SendPropertyChanged("mediaTypeId");
					this.OnmediaTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mediaLanguageId", DbType="TinyInt")]
		public System.Nullable<byte> mediaLanguageId
		{
			get
			{
				return this._mediaLanguageId;
			}
			set
			{
				if ((this._mediaLanguageId != value))
				{
					this.OnmediaLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._mediaLanguageId = value;
					this.SendPropertyChanged("mediaLanguageId");
					this.OnmediaLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortOrder", DbType="SmallInt")]
		public System.Nullable<short> sortOrder
		{
			get
			{
				return this._sortOrder;
			}
			set
			{
				if ((this._sortOrder != value))
				{
					this.OnsortOrderChanging(value);
					this.SendPropertyChanging();
					this._sortOrder = value;
					this.SendPropertyChanged("sortOrder");
					this.OnsortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Media_MediaTranslation", Storage="_MediaTranslations", ThisKey="id", OtherKey="mediaId")]
		public EntitySet<MediaTranslation> MediaTranslations
		{
			get
			{
				return this._MediaTranslations;
			}
			set
			{
				this._MediaTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Media", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Medias.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Medias.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MediaTranslations(MediaTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Media = this;
		}
		
		private void detach_MediaTranslations(MediaTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Media = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaTranslation")]
	public partial class MediaTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mediaId;
		
		private string _languageId;
		
		private string _mediaTitle;
		
		private string _caption;
		
		private EntityRef<Media> _Media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmediaIdChanging(int value);
    partial void OnmediaIdChanged();
    partial void OnlanguageIdChanging(string value);
    partial void OnlanguageIdChanged();
    partial void OnmediaTitleChanging(string value);
    partial void OnmediaTitleChanged();
    partial void OncaptionChanging(string value);
    partial void OncaptionChanged();
    #endregion
		
		public MediaTranslation()
		{
			this._Media = default(EntityRef<Media>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mediaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mediaId
		{
			get
			{
				return this._mediaId;
			}
			set
			{
				if ((this._mediaId != value))
				{
					if (this._Media.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmediaIdChanging(value);
					this.SendPropertyChanging();
					this._mediaId = value;
					this.SendPropertyChanged("mediaId");
					this.OnmediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mediaTitle", DbType="NVarChar(100)")]
		public string mediaTitle
		{
			get
			{
				return this._mediaTitle;
			}
			set
			{
				if ((this._mediaTitle != value))
				{
					this.OnmediaTitleChanging(value);
					this.SendPropertyChanging();
					this._mediaTitle = value;
					this.SendPropertyChanged("mediaTitle");
					this.OnmediaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caption", DbType="NVarChar(100)")]
		public string caption
		{
			get
			{
				return this._caption;
			}
			set
			{
				if ((this._caption != value))
				{
					this.OncaptionChanging(value);
					this.SendPropertyChanging();
					this._caption = value;
					this.SendPropertyChanged("caption");
					this.OncaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Media_MediaTranslation", Storage="_Media", ThisKey="mediaId", OtherKey="id", IsForeignKey=true)]
		public Media Media
		{
			get
			{
				return this._Media.Entity;
			}
			set
			{
				Media previousValue = this._Media.Entity;
				if (((previousValue != value) 
							|| (this._Media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Media.Entity = null;
						previousValue.MediaTranslations.Remove(this);
					}
					this._Media.Entity = value;
					if ((value != null))
					{
						value.MediaTranslations.Add(this);
						this._mediaId = value.id;
					}
					else
					{
						this._mediaId = default(int);
					}
					this.SendPropertyChanged("Media");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Note")]
	public partial class Note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _noteBody;
		
		private System.DateTime _creationDate;
		
		private System.Nullable<System.DateTime> _reminderDate;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<BusinessNote> _BusinessNotes;
		
		private EntitySet<ContactNote> _ContactNotes;
		
		private EntitySet<ProductNote> _ProductNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnoteBodyChanging(string value);
    partial void OnnoteBodyChanged();
    partial void OncreationDateChanging(System.DateTime value);
    partial void OncreationDateChanged();
    partial void OnreminderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreminderDateChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Note()
		{
			this._BusinessNotes = new EntitySet<BusinessNote>(new Action<BusinessNote>(this.attach_BusinessNotes), new Action<BusinessNote>(this.detach_BusinessNotes));
			this._ContactNotes = new EntitySet<ContactNote>(new Action<ContactNote>(this.attach_ContactNotes), new Action<ContactNote>(this.detach_ContactNotes));
			this._ProductNotes = new EntitySet<ProductNote>(new Action<ProductNote>(this.attach_ProductNotes), new Action<ProductNote>(this.detach_ProductNotes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteBody", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string noteBody
		{
			get
			{
				return this._noteBody;
			}
			set
			{
				if ((this._noteBody != value))
				{
					this.OnnoteBodyChanging(value);
					this.SendPropertyChanging();
					this._noteBody = value;
					this.SendPropertyChanged("noteBody");
					this.OnnoteBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creationDate", DbType="DateTime NOT NULL")]
		public System.DateTime creationDate
		{
			get
			{
				return this._creationDate;
			}
			set
			{
				if ((this._creationDate != value))
				{
					this.OncreationDateChanging(value);
					this.SendPropertyChanging();
					this._creationDate = value;
					this.SendPropertyChanged("creationDate");
					this.OncreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reminderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> reminderDate
		{
			get
			{
				return this._reminderDate;
			}
			set
			{
				if ((this._reminderDate != value))
				{
					this.OnreminderDateChanging(value);
					this.SendPropertyChanging();
					this._reminderDate = value;
					this.SendPropertyChanged("reminderDate");
					this.OnreminderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_BusinessNote", Storage="_BusinessNotes", ThisKey="id", OtherKey="noteId")]
		public EntitySet<BusinessNote> BusinessNotes
		{
			get
			{
				return this._BusinessNotes;
			}
			set
			{
				this._BusinessNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_ContactNote", Storage="_ContactNotes", ThisKey="id", OtherKey="noteId")]
		public EntitySet<ContactNote> ContactNotes
		{
			get
			{
				return this._ContactNotes;
			}
			set
			{
				this._ContactNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_ProductNote", Storage="_ProductNotes", ThisKey="id", OtherKey="noteId")]
		public EntitySet<ProductNote> ProductNotes
		{
			get
			{
				return this._ProductNotes;
			}
			set
			{
				this._ProductNotes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessNotes(BusinessNote entity)
		{
			this.SendPropertyChanging();
			entity.Note = this;
		}
		
		private void detach_BusinessNotes(BusinessNote entity)
		{
			this.SendPropertyChanging();
			entity.Note = null;
		}
		
		private void attach_ContactNotes(ContactNote entity)
		{
			this.SendPropertyChanging();
			entity.Note = this;
		}
		
		private void detach_ContactNotes(ContactNote entity)
		{
			this.SendPropertyChanging();
			entity.Note = null;
		}
		
		private void attach_ProductNotes(ProductNote entity)
		{
			this.SendPropertyChanging();
			entity.Note = this;
		}
		
		private void detach_ProductNotes(ProductNote entity)
		{
			this.SendPropertyChanging();
			entity.Note = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phone")]
	public partial class Phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _phoneNumber;
		
		private System.Nullable<byte> _phoneTypeId;
		
		private string _comment;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<ContactPhone> _ContactPhones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnphoneTypeIdChanging(System.Nullable<byte> value);
    partial void OnphoneTypeIdChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Phone()
		{
			this._ContactPhones = new EntitySet<ContactPhone>(new Action<ContactPhone>(this.attach_ContactPhones), new Action<ContactPhone>(this.detach_ContactPhones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(50)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneTypeId", DbType="TinyInt")]
		public System.Nullable<byte> phoneTypeId
		{
			get
			{
				return this._phoneTypeId;
			}
			set
			{
				if ((this._phoneTypeId != value))
				{
					this.OnphoneTypeIdChanging(value);
					this.SendPropertyChanging();
					this._phoneTypeId = value;
					this.SendPropertyChanged("phoneTypeId");
					this.OnphoneTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(1000)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phone_ContactPhone", Storage="_ContactPhones", ThisKey="id", OtherKey="phoneId")]
		public EntitySet<ContactPhone> ContactPhones
		{
			get
			{
				return this._ContactPhones;
			}
			set
			{
				this._ContactPhones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactPhones(ContactPhone entity)
		{
			this.SendPropertyChanging();
			entity.Phone = this;
		}
		
		private void detach_ContactPhones(ContactPhone entity)
		{
			this.SendPropertyChanging();
			entity.Phone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintVersionTranslation")]
	public partial class PrintVersionTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _languageId;
		
		private string _rateDescription;
		
		private string _dateDescription;
		
		private string _printDescription;
		
		private string _unitDescription;
		
		private string _directions;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnlanguageIdChanging(string value);
    partial void OnlanguageIdChanged();
    partial void OnrateDescriptionChanging(string value);
    partial void OnrateDescriptionChanged();
    partial void OndateDescriptionChanging(string value);
    partial void OndateDescriptionChanged();
    partial void OnprintDescriptionChanging(string value);
    partial void OnprintDescriptionChanged();
    partial void OnunitDescriptionChanging(string value);
    partial void OnunitDescriptionChanged();
    partial void OndirectionsChanging(string value);
    partial void OndirectionsChanged();
    #endregion
		
		public PrintVersionTranslation()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateDescription", DbType="NVarChar(4000)")]
		public string rateDescription
		{
			get
			{
				return this._rateDescription;
			}
			set
			{
				if ((this._rateDescription != value))
				{
					this.OnrateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._rateDescription = value;
					this.SendPropertyChanged("rateDescription");
					this.OnrateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDescription", DbType="NVarChar(4000)")]
		public string dateDescription
		{
			get
			{
				return this._dateDescription;
			}
			set
			{
				if ((this._dateDescription != value))
				{
					this.OndateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._dateDescription = value;
					this.SendPropertyChanged("dateDescription");
					this.OndateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_printDescription", DbType="NVarChar(4000)")]
		public string printDescription
		{
			get
			{
				return this._printDescription;
			}
			set
			{
				if ((this._printDescription != value))
				{
					this.OnprintDescriptionChanging(value);
					this.SendPropertyChanging();
					this._printDescription = value;
					this.SendPropertyChanged("printDescription");
					this.OnprintDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitDescription", DbType="NVarChar(4000)")]
		public string unitDescription
		{
			get
			{
				return this._unitDescription;
			}
			set
			{
				if ((this._unitDescription != value))
				{
					this.OnunitDescriptionChanging(value);
					this.SendPropertyChanging();
					this._unitDescription = value;
					this.SendPropertyChanged("unitDescription");
					this.OnunitDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directions", DbType="NVarChar(4000)")]
		public string directions
		{
			get
			{
				return this._directions;
			}
			set
			{
				if ((this._directions != value))
				{
					this.OndirectionsChanging(value);
					this.SendPropertyChanging();
					this._directions = value;
					this.SendPropertyChanged("directions");
					this.OndirectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PrintVersionTranslation", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.PrintVersionTranslations.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.PrintVersionTranslations.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductAttribute")]
	public partial class ProductAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _productTypeId;
		
		private short _attributeId;
		
		private short _attributeGroupId;
		
		private EntityRef<Attribute> _Attribute;
		
		private EntityRef<AttributeGroup> _AttributeGroup;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnproductTypeIdChanging(byte value);
    partial void OnproductTypeIdChanged();
    partial void OnattributeIdChanging(short value);
    partial void OnattributeIdChanged();
    partial void OnattributeGroupIdChanging(short value);
    partial void OnattributeGroupIdChanged();
    #endregion
		
		public ProductAttribute()
		{
			this._Attribute = default(EntityRef<Attribute>);
			this._AttributeGroup = default(EntityRef<AttributeGroup>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte productTypeId
		{
			get
			{
				return this._productTypeId;
			}
			set
			{
				if ((this._productTypeId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._productTypeId = value;
					this.SendPropertyChanged("productTypeId");
					this.OnproductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short attributeId
		{
			get
			{
				return this._attributeId;
			}
			set
			{
				if ((this._attributeId != value))
				{
					if (this._Attribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnattributeIdChanging(value);
					this.SendPropertyChanging();
					this._attributeId = value;
					this.SendPropertyChanged("attributeId");
					this.OnattributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeGroupId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short attributeGroupId
		{
			get
			{
				return this._attributeGroupId;
			}
			set
			{
				if ((this._attributeGroupId != value))
				{
					if ((this._Attribute.HasLoadedOrAssignedValue || this._AttributeGroup.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnattributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._attributeGroupId = value;
					this.SendPropertyChanged("attributeGroupId");
					this.OnattributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attribute_ProductAttribute", Storage="_Attribute", ThisKey="attributeId,attributeGroupId", OtherKey="id,attributeGroupId", IsForeignKey=true)]
		public Attribute Attribute
		{
			get
			{
				return this._Attribute.Entity;
			}
			set
			{
				Attribute previousValue = this._Attribute.Entity;
				if (((previousValue != value) 
							|| (this._Attribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attribute.Entity = null;
						previousValue.ProductAttributes.Remove(this);
					}
					this._Attribute.Entity = value;
					if ((value != null))
					{
						value.ProductAttributes.Add(this);
						this._attributeId = value.id;
						this._attributeGroupId = value.attributeGroupId;
					}
					else
					{
						this._attributeId = default(short);
						this._attributeGroupId = default(short);
					}
					this.SendPropertyChanged("Attribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeGroup_ProductAttribute", Storage="_AttributeGroup", ThisKey="attributeGroupId", OtherKey="id", IsForeignKey=true)]
		public AttributeGroup AttributeGroup
		{
			get
			{
				return this._AttributeGroup.Entity;
			}
			set
			{
				AttributeGroup previousValue = this._AttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._AttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeGroup.Entity = null;
						previousValue.ProductAttributes.Remove(this);
					}
					this._AttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductAttributes.Add(this);
						this._attributeGroupId = value.id;
					}
					else
					{
						this._attributeGroupId = default(short);
					}
					this.SendPropertyChanged("AttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductAttribute", Storage="_Product", ThisKey="productId,productTypeId", OtherKey="id,productTypeId", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductAttributes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductAttributes.Add(this);
						this._productId = value.id;
						this._productTypeId = value.productTypeId;
					}
					else
					{
						this._productId = default(int);
						this._productTypeId = default(byte);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductDescription")]
	public partial class ProductDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _languageId;
		
		private byte _descriptionTypeId;
		
		private string _description;
		
		private EntityRef<ProductDescription> _ProductDescription2;
		
		private EntityRef<ProductDescription> _ProductDescription1;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnlanguageIdChanging(string value);
    partial void OnlanguageIdChanged();
    partial void OndescriptionTypeIdChanging(byte value);
    partial void OndescriptionTypeIdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public ProductDescription()
		{
			this._ProductDescription2 = default(EntityRef<ProductDescription>);
			this._ProductDescription1 = default(EntityRef<ProductDescription>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if ((this._ProductDescription1.HasLoadedOrAssignedValue || this._Product.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					if (this._ProductDescription1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriptionTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte descriptionTypeId
		{
			get
			{
				return this._descriptionTypeId;
			}
			set
			{
				if ((this._descriptionTypeId != value))
				{
					if (this._ProductDescription1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndescriptionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._descriptionTypeId = value;
					this.SendPropertyChanged("descriptionTypeId");
					this.OndescriptionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(4000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDescription_ProductDescription", Storage="_ProductDescription2", ThisKey="productId,languageId,descriptionTypeId", OtherKey="productId,languageId,descriptionTypeId", IsUnique=true, IsForeignKey=false)]
		public ProductDescription ProductDescription2
		{
			get
			{
				return this._ProductDescription2.Entity;
			}
			set
			{
				ProductDescription previousValue = this._ProductDescription2.Entity;
				if (((previousValue != value) 
							|| (this._ProductDescription2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductDescription2.Entity = null;
						previousValue.ProductDescription1 = null;
					}
					this._ProductDescription2.Entity = value;
					if ((value != null))
					{
						value.ProductDescription1 = this;
					}
					this.SendPropertyChanged("ProductDescription2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDescription_ProductDescription", Storage="_ProductDescription1", ThisKey="productId,languageId,descriptionTypeId", OtherKey="productId,languageId,descriptionTypeId", IsForeignKey=true)]
		public ProductDescription ProductDescription1
		{
			get
			{
				return this._ProductDescription1.Entity;
			}
			set
			{
				ProductDescription previousValue = this._ProductDescription1.Entity;
				if (((previousValue != value) 
							|| (this._ProductDescription1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductDescription1.Entity = null;
						previousValue.ProductDescription2 = null;
					}
					this._ProductDescription1.Entity = value;
					if ((value != null))
					{
						value.ProductDescription2 = this;
						this._productId = value.productId;
						this._languageId = value.languageId;
						this._descriptionTypeId = value.descriptionTypeId;
					}
					else
					{
						this._productId = default(int);
						this._languageId = default(string);
						this._descriptionTypeId = default(byte);
					}
					this.SendPropertyChanged("ProductDescription1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDescription", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductDescriptions.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductDescriptions.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductNote")]
	public partial class ProductNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private int _noteId;
		
		private EntityRef<Note> _Note;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnnoteIdChanging(int value);
    partial void OnnoteIdChanged();
    #endregion
		
		public ProductNote()
		{
			this._Note = default(EntityRef<Note>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int noteId
		{
			get
			{
				return this._noteId;
			}
			set
			{
				if ((this._noteId != value))
				{
					if (this._Note.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnoteIdChanging(value);
					this.SendPropertyChanging();
					this._noteId = value;
					this.SendPropertyChanged("noteId");
					this.OnnoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_ProductNote", Storage="_Note", ThisKey="noteId", OtherKey="id", IsForeignKey=true)]
		public Note Note
		{
			get
			{
				return this._Note.Entity;
			}
			set
			{
				Note previousValue = this._Note.Entity;
				if (((previousValue != value) 
							|| (this._Note.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Note.Entity = null;
						previousValue.ProductNotes.Remove(this);
					}
					this._Note.Entity = value;
					if ((value != null))
					{
						value.ProductNotes.Add(this);
						this._noteId = value.id;
					}
					else
					{
						this._noteId = default(int);
					}
					this.SendPropertyChanged("Note");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductNote", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductNotes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductNotes.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductPaymentType")]
	public partial class ProductPaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _paymentTypeId;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnpaymentTypeIdChanging(byte value);
    partial void OnpaymentTypeIdChanged();
    #endregion
		
		public ProductPaymentType()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte paymentTypeId
		{
			get
			{
				return this._paymentTypeId;
			}
			set
			{
				if ((this._paymentTypeId != value))
				{
					this.OnpaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._paymentTypeId = value;
					this.SendPropertyChanged("paymentTypeId");
					this.OnpaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductPaymentType", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductPaymentTypes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductPaymentTypes.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductRegionOfOperation")]
	public partial class ProductRegionOfOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _regionId;
		
		private EntityRef<refRegion> _refRegion;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnregionIdChanging(byte value);
    partial void OnregionIdChanged();
    #endregion
		
		public ProductRegionOfOperation()
		{
			this._refRegion = default(EntityRef<refRegion>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte regionId
		{
			get
			{
				return this._regionId;
			}
			set
			{
				if ((this._regionId != value))
				{
					if (this._refRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnregionIdChanging(value);
					this.SendPropertyChanging();
					this._regionId = value;
					this.SendPropertyChanged("regionId");
					this.OnregionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refRegion_ProductRegionOfOperation", Storage="_refRegion", ThisKey="regionId", OtherKey="id", IsForeignKey=true)]
		public refRegion refRegion
		{
			get
			{
				return this._refRegion.Entity;
			}
			set
			{
				refRegion previousValue = this._refRegion.Entity;
				if (((previousValue != value) 
							|| (this._refRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refRegion.Entity = null;
						previousValue.ProductRegionOfOperations.Remove(this);
					}
					this._refRegion.Entity = value;
					if ((value != null))
					{
						value.ProductRegionOfOperations.Add(this);
						this._regionId = value.id;
					}
					else
					{
						this._regionId = default(byte);
					}
					this.SendPropertyChanged("refRegion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductRegionOfOperation", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductRegionOfOperations.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductRegionOfOperations.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTranslation")]
	public partial class ProductTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _languageId;
		
		private string _rateDescription;
		
		private string _dateDescription;
		
		private string _webDescription;
		
		private string _keywords;
		
		private string _directions;
		
		private string _cancellationPolicy;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnlanguageIdChanging(string value);
    partial void OnlanguageIdChanged();
    partial void OnrateDescriptionChanging(string value);
    partial void OnrateDescriptionChanged();
    partial void OndateDescriptionChanging(string value);
    partial void OndateDescriptionChanged();
    partial void OnwebDescriptionChanging(string value);
    partial void OnwebDescriptionChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OndirectionsChanging(string value);
    partial void OndirectionsChanged();
    partial void OncancellationPolicyChanging(string value);
    partial void OncancellationPolicyChanged();
    #endregion
		
		public ProductTranslation()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateDescription", DbType="NVarChar(4000)")]
		public string rateDescription
		{
			get
			{
				return this._rateDescription;
			}
			set
			{
				if ((this._rateDescription != value))
				{
					this.OnrateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._rateDescription = value;
					this.SendPropertyChanged("rateDescription");
					this.OnrateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDescription", DbType="NVarChar(4000)")]
		public string dateDescription
		{
			get
			{
				return this._dateDescription;
			}
			set
			{
				if ((this._dateDescription != value))
				{
					this.OndateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._dateDescription = value;
					this.SendPropertyChanged("dateDescription");
					this.OndateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_webDescription", DbType="NVarChar(MAX)")]
		public string webDescription
		{
			get
			{
				return this._webDescription;
			}
			set
			{
				if ((this._webDescription != value))
				{
					this.OnwebDescriptionChanging(value);
					this.SendPropertyChanging();
					this._webDescription = value;
					this.SendPropertyChanged("webDescription");
					this.OnwebDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="NVarChar(1000)")]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directions", DbType="NVarChar(2000)")]
		public string directions
		{
			get
			{
				return this._directions;
			}
			set
			{
				if ((this._directions != value))
				{
					this.OndirectionsChanging(value);
					this.SendPropertyChanging();
					this._directions = value;
					this.SendPropertyChanged("directions");
					this.OndirectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancellationPolicy", DbType="NVarChar(4000)")]
		public string cancellationPolicy
		{
			get
			{
				return this._cancellationPolicy;
			}
			set
			{
				if ((this._cancellationPolicy != value))
				{
					this.OncancellationPolicyChanging(value);
					this.SendPropertyChanging();
					this._cancellationPolicy = value;
					this.SendPropertyChanged("cancellationPolicy");
					this.OncancellationPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductTranslation", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductTranslations.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductTranslations.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refProvinceState")]
	public partial class refProvinceState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _provinceStateName;
		
		private string _countryId;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnprovinceStateNameChanging(string value);
    partial void OnprovinceStateNameChanged();
    partial void OncountryIdChanging(string value);
    partial void OncountryIdChanged();
    #endregion
		
		public refProvinceState()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provinceStateName", DbType="VarChar(50)")]
		public string provinceStateName
		{
			get
			{
				return this._provinceStateName;
			}
			set
			{
				if ((this._provinceStateName != value))
				{
					this.OnprovinceStateNameChanging(value);
					this.SendPropertyChanging();
					this._provinceStateName = value;
					this.SendPropertyChanged("provinceStateName");
					this.OnprovinceStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryId", DbType="Char(2)")]
		public string countryId
		{
			get
			{
				return this._countryId;
			}
			set
			{
				if ((this._countryId != value))
				{
					this.OncountryIdChanging(value);
					this.SendPropertyChanging();
					this._countryId = value;
					this.SendPropertyChanged("countryId");
					this.OncountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refProvinceState_Address", Storage="_Addresses", ThisKey="id", OtherKey="provinceStateId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.refProvinceState = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.refProvinceState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationStatus")]
	public partial class TranslationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _productId;
		
		private byte _fieldId;
		
		private System.Nullable<int> _secondaryId;
		
		private System.DateTime _statusDate;
		
		private EntityRef<refProductField> _refProductField;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnfieldIdChanging(byte value);
    partial void OnfieldIdChanged();
    partial void OnsecondaryIdChanging(System.Nullable<int> value);
    partial void OnsecondaryIdChanged();
    partial void OnstatusDateChanging(System.DateTime value);
    partial void OnstatusDateChanged();
    #endregion
		
		public TranslationStatus()
		{
			this._refProductField = default(EntityRef<refProductField>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldId", DbType="TinyInt NOT NULL")]
		public byte fieldId
		{
			get
			{
				return this._fieldId;
			}
			set
			{
				if ((this._fieldId != value))
				{
					if (this._refProductField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfieldIdChanging(value);
					this.SendPropertyChanging();
					this._fieldId = value;
					this.SendPropertyChanged("fieldId");
					this.OnfieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryId", DbType="Int")]
		public System.Nullable<int> secondaryId
		{
			get
			{
				return this._secondaryId;
			}
			set
			{
				if ((this._secondaryId != value))
				{
					this.OnsecondaryIdChanging(value);
					this.SendPropertyChanging();
					this._secondaryId = value;
					this.SendPropertyChanged("secondaryId");
					this.OnsecondaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusDate", DbType="DateTime NOT NULL")]
		public System.DateTime statusDate
		{
			get
			{
				return this._statusDate;
			}
			set
			{
				if ((this._statusDate != value))
				{
					this.OnstatusDateChanging(value);
					this.SendPropertyChanging();
					this._statusDate = value;
					this.SendPropertyChanged("statusDate");
					this.OnstatusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refProductField_TranslationStatus", Storage="_refProductField", ThisKey="fieldId", OtherKey="id", IsForeignKey=true)]
		public refProductField refProductField
		{
			get
			{
				return this._refProductField.Entity;
			}
			set
			{
				refProductField previousValue = this._refProductField.Entity;
				if (((previousValue != value) 
							|| (this._refProductField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refProductField.Entity = null;
						previousValue.TranslationStatus.Remove(this);
					}
					this._refProductField.Entity = value;
					if ((value != null))
					{
						value.TranslationStatus.Add(this);
						this._fieldId = value.id;
					}
					else
					{
						this._fieldId = default(byte);
					}
					this.SendPropertyChanged("refProductField");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_TranslationStatus", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.TranslationStatus.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.TranslationStatus.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Url")]
	public partial class Url : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _url;
		
		private byte _urlTypeId;
		
		private int _productId;
		
		private System.Nullable<decimal> _distance;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<UrlTranslation> _UrlTranslations;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnurlTypeIdChanging(byte value);
    partial void OnurlTypeIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OndistanceChanging(System.Nullable<decimal> value);
    partial void OndistanceChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Url()
		{
			this._UrlTranslations = new EntitySet<UrlTranslation>(new Action<UrlTranslation>(this.attach_UrlTranslations), new Action<UrlTranslation>(this.detach_UrlTranslations));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlTypeId", DbType="TinyInt NOT NULL")]
		public byte urlTypeId
		{
			get
			{
				return this._urlTypeId;
			}
			set
			{
				if ((this._urlTypeId != value))
				{
					this.OnurlTypeIdChanging(value);
					this.SendPropertyChanging();
					this._urlTypeId = value;
					this.SendPropertyChanged("urlTypeId");
					this.OnurlTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distance", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> distance
		{
			get
			{
				return this._distance;
			}
			set
			{
				if ((this._distance != value))
				{
					this.OndistanceChanging(value);
					this.SendPropertyChanging();
					this._distance = value;
					this.SendPropertyChanged("distance");
					this.OndistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Url_UrlTranslation", Storage="_UrlTranslations", ThisKey="id", OtherKey="urlId")]
		public EntitySet<UrlTranslation> UrlTranslations
		{
			get
			{
				return this._UrlTranslations;
			}
			set
			{
				this._UrlTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Url", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Urls.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Urls.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UrlTranslations(UrlTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Url = this;
		}
		
		private void detach_UrlTranslations(UrlTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Url = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UrlTranslation")]
	public partial class UrlTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _urlId;
		
		private string _languageId;
		
		private string _title;
		
		private string _description;
		
		private EntityRef<Url> _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnurlIdChanging(int value);
    partial void OnurlIdChanged();
    partial void OnlanguageIdChanging(string value);
    partial void OnlanguageIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public UrlTranslation()
		{
			this._Url = default(EntityRef<Url>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int urlId
		{
			get
			{
				return this._urlId;
			}
			set
			{
				if ((this._urlId != value))
				{
					if (this._Url.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnurlIdChanging(value);
					this.SendPropertyChanging();
					this._urlId = value;
					this.SendPropertyChanged("urlId");
					this.OnurlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Url_UrlTranslation", Storage="_Url", ThisKey="urlId", OtherKey="id", IsForeignKey=true)]
		public Url Url
		{
			get
			{
				return this._Url.Entity;
			}
			set
			{
				Url previousValue = this._Url.Entity;
				if (((previousValue != value) 
							|| (this._Url.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Url.Entity = null;
						previousValue.UrlTranslations.Remove(this);
					}
					this._Url.Entity = value;
					if ((value != null))
					{
						value.UrlTranslations.Add(this);
						this._urlId = value.id;
					}
					else
					{
						this._urlId = default(int);
					}
					this.SendPropertyChanged("Url");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _password;
		
		private string _username;
		
		private System.DateTime _creationDate;
		
		private EntitySet<UserProfileRole> _UserProfileRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OncreationDateChanging(System.DateTime value);
    partial void OncreationDateChanged();
    #endregion
		
		public UserProfile()
		{
			this._UserProfileRoles = new EntitySet<UserProfileRole>(new Action<UserProfileRole>(this.attach_UserProfileRoles), new Action<UserProfileRole>(this.detach_UserProfileRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creationDate", DbType="DateTime NOT NULL")]
		public System.DateTime creationDate
		{
			get
			{
				return this._creationDate;
			}
			set
			{
				if ((this._creationDate != value))
				{
					this.OncreationDateChanging(value);
					this.SendPropertyChanging();
					this._creationDate = value;
					this.SendPropertyChanged("creationDate");
					this.OncreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfileRole", Storage="_UserProfileRoles", ThisKey="id", OtherKey="profileId")]
		public EntitySet<UserProfileRole> UserProfileRoles
		{
			get
			{
				return this._UserProfileRoles;
			}
			set
			{
				this._UserProfileRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfileRoles(UserProfileRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_UserProfileRoles(UserProfileRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfileRole")]
	public partial class UserProfileRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _profileId;
		
		private int _roleId;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntityRef<UserRole> _UserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprofileIdChanging(int value);
    partial void OnprofileIdChanged();
    partial void OnroleIdChanging(int value);
    partial void OnroleIdChanged();
    #endregion
		
		public UserProfileRole()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			this._UserRole = default(EntityRef<UserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int profileId
		{
			get
			{
				return this._profileId;
			}
			set
			{
				if ((this._profileId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofileIdChanging(value);
					this.SendPropertyChanging();
					this._profileId = value;
					this.SendPropertyChanged("profileId");
					this.OnprofileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._UserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfileRole", Storage="_UserProfile", ThisKey="profileId", OtherKey="id", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserProfileRoles.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserProfileRoles.Add(this);
						this._profileId = value.id;
					}
					else
					{
						this._profileId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_UserProfileRole", Storage="_UserRole", ThisKey="roleId", OtherKey="id", IsForeignKey=true)]
		public UserRole UserRole
		{
			get
			{
				return this._UserRole.Entity;
			}
			set
			{
				UserRole previousValue = this._UserRole.Entity;
				if (((previousValue != value) 
							|| (this._UserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRole.Entity = null;
						previousValue.UserProfileRoles.Remove(this);
					}
					this._UserRole.Entity = value;
					if ((value != null))
					{
						value.UserProfileRoles.Add(this);
						this._roleId = value.id;
					}
					else
					{
						this._roleId = default(int);
					}
					this.SendPropertyChanged("UserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roleName;
		
		private EntitySet<UserProfileRole> _UserProfileRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroleNameChanging(string value);
    partial void OnroleNameChanged();
    #endregion
		
		public UserRole()
		{
			this._UserProfileRoles = new EntitySet<UserProfileRole>(new Action<UserProfileRole>(this.attach_UserProfileRoles), new Action<UserProfileRole>(this.detach_UserProfileRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string roleName
		{
			get
			{
				return this._roleName;
			}
			set
			{
				if ((this._roleName != value))
				{
					this.OnroleNameChanging(value);
					this.SendPropertyChanging();
					this._roleName = value;
					this.SendPropertyChanged("roleName");
					this.OnroleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_UserProfileRole", Storage="_UserProfileRoles", ThisKey="id", OtherKey="roleId")]
		public EntitySet<UserProfileRole> UserProfileRoles
		{
			get
			{
				return this._UserProfileRoles;
			}
			set
			{
				this._UserProfileRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfileRoles(UserProfileRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = this;
		}
		
		private void detach_UserProfileRoles(UserProfileRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VersionHistory")]
	public partial class VersionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _productId;
		
		private System.Nullable<int> _secondaryId;
		
		private byte _typeId;
		
		private byte _actionId;
		
		private string _modifiedBy;
		
		private System.DateTime _modificationDate;
		
		private string _versionXml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnsecondaryIdChanging(System.Nullable<int> value);
    partial void OnsecondaryIdChanged();
    partial void OntypeIdChanging(byte value);
    partial void OntypeIdChanged();
    partial void OnactionIdChanging(byte value);
    partial void OnactionIdChanged();
    partial void OnmodifiedByChanging(string value);
    partial void OnmodifiedByChanged();
    partial void OnmodificationDateChanging(System.DateTime value);
    partial void OnmodificationDateChanged();
    partial void OnversionXmlChanging(string value);
    partial void OnversionXmlChanged();
    #endregion
		
		public VersionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryId", DbType="Int")]
		public System.Nullable<int> secondaryId
		{
			get
			{
				return this._secondaryId;
			}
			set
			{
				if ((this._secondaryId != value))
				{
					this.OnsecondaryIdChanging(value);
					this.SendPropertyChanging();
					this._secondaryId = value;
					this.SendPropertyChanged("secondaryId");
					this.OnsecondaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="TinyInt NOT NULL")]
		public byte typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId", DbType="TinyInt NOT NULL")]
		public byte actionId
		{
			get
			{
				return this._actionId;
			}
			set
			{
				if ((this._actionId != value))
				{
					this.OnactionIdChanging(value);
					this.SendPropertyChanging();
					this._actionId = value;
					this.SendPropertyChanged("actionId");
					this.OnactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifiedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string modifiedBy
		{
			get
			{
				return this._modifiedBy;
			}
			set
			{
				if ((this._modifiedBy != value))
				{
					this.OnmodifiedByChanging(value);
					this.SendPropertyChanging();
					this._modifiedBy = value;
					this.SendPropertyChanged("modifiedBy");
					this.OnmodifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modificationDate", DbType="DateTime NOT NULL")]
		public System.DateTime modificationDate
		{
			get
			{
				return this._modificationDate;
			}
			set
			{
				if ((this._modificationDate != value))
				{
					this.OnmodificationDateChanging(value);
					this.SendPropertyChanging();
					this._modificationDate = value;
					this.SendPropertyChanged("modificationDate");
					this.OnmodificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_versionXml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string versionXml
		{
			get
			{
				return this._versionXml;
			}
			set
			{
				if ((this._versionXml != value))
				{
					this.OnversionXmlChanging(value);
					this.SendPropertyChanging();
					this._versionXml = value;
					this.SendPropertyChanged("versionXml");
					this.OnversionXmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCaaRating")]
	public partial class ProductCaaRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _caaRatingTypeId;
		
		private byte _ratingValue;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OncaaRatingTypeIdChanging(byte value);
    partial void OncaaRatingTypeIdChanged();
    partial void OnratingValueChanging(byte value);
    partial void OnratingValueChanged();
    #endregion
		
		public ProductCaaRating()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caaRatingTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte caaRatingTypeId
		{
			get
			{
				return this._caaRatingTypeId;
			}
			set
			{
				if ((this._caaRatingTypeId != value))
				{
					this.OncaaRatingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._caaRatingTypeId = value;
					this.SendPropertyChanged("caaRatingTypeId");
					this.OncaaRatingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratingValue", DbType="TinyInt NOT NULL")]
		public byte ratingValue
		{
			get
			{
				return this._ratingValue;
			}
			set
			{
				if ((this._ratingValue != value))
				{
					this.OnratingValueChanging(value);
					this.SendPropertyChanging();
					this._ratingValue = value;
					this.SendPropertyChanged("ratingValue");
					this.OnratingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCaaRating", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductCaaRatings.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductCaaRatings.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCanadaSelectRating")]
	public partial class ProductCanadaSelectRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _canadaSelectRatingTypeId;
		
		private byte _ratingValue;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OncanadaSelectRatingTypeIdChanging(byte value);
    partial void OncanadaSelectRatingTypeIdChanged();
    partial void OnratingValueChanging(byte value);
    partial void OnratingValueChanged();
    #endregion
		
		public ProductCanadaSelectRating()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canadaSelectRatingTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte canadaSelectRatingTypeId
		{
			get
			{
				return this._canadaSelectRatingTypeId;
			}
			set
			{
				if ((this._canadaSelectRatingTypeId != value))
				{
					this.OncanadaSelectRatingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._canadaSelectRatingTypeId = value;
					this.SendPropertyChanged("canadaSelectRatingTypeId");
					this.OncanadaSelectRatingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratingValue", DbType="TinyInt NOT NULL")]
		public byte ratingValue
		{
			get
			{
				return this._ratingValue;
			}
			set
			{
				if ((this._ratingValue != value))
				{
					this.OnratingValueChanging(value);
					this.SendPropertyChanging();
					this._ratingValue = value;
					this.SendPropertyChanged("ratingValue");
					this.OnratingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCanadaSelectRating", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductCanadaSelectRatings.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductCanadaSelectRatings.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refProductField")]
	public partial class refProductField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id;
		
		private string _fieldName;
		
		private byte _fieldTypeId;
		
		private EntitySet<TranslationStatus> _TranslationStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(byte value);
    partial void OnidChanged();
    partial void OnfieldNameChanging(string value);
    partial void OnfieldNameChanged();
    partial void OnfieldTypeIdChanging(byte value);
    partial void OnfieldTypeIdChanged();
    #endregion
		
		public refProductField()
		{
			this._TranslationStatus = new EntitySet<TranslationStatus>(new Action<TranslationStatus>(this.attach_TranslationStatus), new Action<TranslationStatus>(this.detach_TranslationStatus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fieldName
		{
			get
			{
				return this._fieldName;
			}
			set
			{
				if ((this._fieldName != value))
				{
					this.OnfieldNameChanging(value);
					this.SendPropertyChanging();
					this._fieldName = value;
					this.SendPropertyChanged("fieldName");
					this.OnfieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldTypeId", DbType="TinyInt NOT NULL")]
		public byte fieldTypeId
		{
			get
			{
				return this._fieldTypeId;
			}
			set
			{
				if ((this._fieldTypeId != value))
				{
					this.OnfieldTypeIdChanging(value);
					this.SendPropertyChanging();
					this._fieldTypeId = value;
					this.SendPropertyChanged("fieldTypeId");
					this.OnfieldTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refProductField_TranslationStatus", Storage="_TranslationStatus", ThisKey="id", OtherKey="fieldId")]
		public EntitySet<TranslationStatus> TranslationStatus
		{
			get
			{
				return this._TranslationStatus;
			}
			set
			{
				this._TranslationStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TranslationStatus(TranslationStatus entity)
		{
			this.SendPropertyChanging();
			entity.refProductField = this;
		}
		
		private void detach_TranslationStatus(TranslationStatus entity)
		{
			this.SendPropertyChanging();
			entity.refProductField = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refGuideSection")]
	public partial class refGuideSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id;
		
		private string _guideSectionName;
		
		private byte _productTypeId;
		
		private byte _guideSortOrder;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(byte value);
    partial void OnidChanged();
    partial void OnguideSectionNameChanging(string value);
    partial void OnguideSectionNameChanged();
    partial void OnproductTypeIdChanging(byte value);
    partial void OnproductTypeIdChanged();
    partial void OnguideSortOrderChanging(byte value);
    partial void OnguideSortOrderChanged();
    #endregion
		
		public refGuideSection()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guideSectionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string guideSectionName
		{
			get
			{
				return this._guideSectionName;
			}
			set
			{
				if ((this._guideSectionName != value))
				{
					this.OnguideSectionNameChanging(value);
					this.SendPropertyChanging();
					this._guideSectionName = value;
					this.SendPropertyChanged("guideSectionName");
					this.OnguideSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeId", DbType="TinyInt NOT NULL")]
		public byte productTypeId
		{
			get
			{
				return this._productTypeId;
			}
			set
			{
				if ((this._productTypeId != value))
				{
					this.OnproductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._productTypeId = value;
					this.SendPropertyChanged("productTypeId");
					this.OnproductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guideSortOrder", DbType="TinyInt NOT NULL")]
		public byte guideSortOrder
		{
			get
			{
				return this._guideSortOrder;
			}
			set
			{
				if ((this._guideSortOrder != value))
				{
					this.OnguideSortOrderChanging(value);
					this.SendPropertyChanging();
					this._guideSortOrder = value;
					this.SendPropertyChanged("guideSortOrder");
					this.OnguideSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refGuideSection_Product", Storage="_Products", ThisKey="id", OtherKey="primaryGuideSectionId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.refGuideSection = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.refGuideSection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private byte _addressTypeId;
		
		private string _line1;
		
		private string _line2;
		
		private string _line3;
		
		private string _city;
		
		private string _provinceStateId;
		
		private string _otherRegion;
		
		private string _countryId;
		
		private string _postalCode;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<BusinessAddress> _BusinessAddresses;
		
		private EntitySet<ContactAddress> _ContactAddresses;
		
		private EntityRef<refProvinceState> _refProvinceState;
		
		private EntityRef<refCountry> _refCountry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaddressTypeIdChanging(byte value);
    partial void OnaddressTypeIdChanged();
    partial void Online1Changing(string value);
    partial void Online1Changed();
    partial void Online2Changing(string value);
    partial void Online2Changed();
    partial void Online3Changing(string value);
    partial void Online3Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceStateIdChanging(string value);
    partial void OnprovinceStateIdChanged();
    partial void OnotherRegionChanging(string value);
    partial void OnotherRegionChanged();
    partial void OncountryIdChanging(string value);
    partial void OncountryIdChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Address()
		{
			this._BusinessAddresses = new EntitySet<BusinessAddress>(new Action<BusinessAddress>(this.attach_BusinessAddresses), new Action<BusinessAddress>(this.detach_BusinessAddresses));
			this._ContactAddresses = new EntitySet<ContactAddress>(new Action<ContactAddress>(this.attach_ContactAddresses), new Action<ContactAddress>(this.detach_ContactAddresses));
			this._refProvinceState = default(EntityRef<refProvinceState>);
			this._refCountry = default(EntityRef<refCountry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressTypeId", DbType="TinyInt NOT NULL")]
		public byte addressTypeId
		{
			get
			{
				return this._addressTypeId;
			}
			set
			{
				if ((this._addressTypeId != value))
				{
					this.OnaddressTypeIdChanging(value);
					this.SendPropertyChanging();
					this._addressTypeId = value;
					this.SendPropertyChanged("addressTypeId");
					this.OnaddressTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line1", DbType="VarChar(200)")]
		public string line1
		{
			get
			{
				return this._line1;
			}
			set
			{
				if ((this._line1 != value))
				{
					this.Online1Changing(value);
					this.SendPropertyChanging();
					this._line1 = value;
					this.SendPropertyChanged("line1");
					this.Online1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line2", DbType="VarChar(200)")]
		public string line2
		{
			get
			{
				return this._line2;
			}
			set
			{
				if ((this._line2 != value))
				{
					this.Online2Changing(value);
					this.SendPropertyChanging();
					this._line2 = value;
					this.SendPropertyChanged("line2");
					this.Online2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line3", DbType="VarChar(200)")]
		public string line3
		{
			get
			{
				return this._line3;
			}
			set
			{
				if ((this._line3 != value))
				{
					this.Online3Changing(value);
					this.SendPropertyChanging();
					this._line3 = value;
					this.SendPropertyChanged("line3");
					this.Online3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(200)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provinceStateId", DbType="Char(2)")]
		public string provinceStateId
		{
			get
			{
				return this._provinceStateId;
			}
			set
			{
				if ((this._provinceStateId != value))
				{
					if (this._refProvinceState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprovinceStateIdChanging(value);
					this.SendPropertyChanging();
					this._provinceStateId = value;
					this.SendPropertyChanged("provinceStateId");
					this.OnprovinceStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherRegion", DbType="VarChar(200)")]
		public string otherRegion
		{
			get
			{
				return this._otherRegion;
			}
			set
			{
				if ((this._otherRegion != value))
				{
					this.OnotherRegionChanging(value);
					this.SendPropertyChanging();
					this._otherRegion = value;
					this.SendPropertyChanged("otherRegion");
					this.OnotherRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryId", DbType="VarChar(2)")]
		public string countryId
		{
			get
			{
				return this._countryId;
			}
			set
			{
				if ((this._countryId != value))
				{
					if (this._refCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryIdChanging(value);
					this.SendPropertyChanging();
					this._countryId = value;
					this.SendPropertyChanged("countryId");
					this.OncountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(50)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_BusinessAddress", Storage="_BusinessAddresses", ThisKey="id", OtherKey="addressId")]
		public EntitySet<BusinessAddress> BusinessAddresses
		{
			get
			{
				return this._BusinessAddresses;
			}
			set
			{
				this._BusinessAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ContactAddress", Storage="_ContactAddresses", ThisKey="id", OtherKey="addressId")]
		public EntitySet<ContactAddress> ContactAddresses
		{
			get
			{
				return this._ContactAddresses;
			}
			set
			{
				this._ContactAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refProvinceState_Address", Storage="_refProvinceState", ThisKey="provinceStateId", OtherKey="id", IsForeignKey=true)]
		public refProvinceState refProvinceState
		{
			get
			{
				return this._refProvinceState.Entity;
			}
			set
			{
				refProvinceState previousValue = this._refProvinceState.Entity;
				if (((previousValue != value) 
							|| (this._refProvinceState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refProvinceState.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._refProvinceState.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._provinceStateId = value.id;
					}
					else
					{
						this._provinceStateId = default(string);
					}
					this.SendPropertyChanged("refProvinceState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refCountry_Address", Storage="_refCountry", ThisKey="countryId", OtherKey="id", IsForeignKey=true)]
		public refCountry refCountry
		{
			get
			{
				return this._refCountry.Entity;
			}
			set
			{
				refCountry previousValue = this._refCountry.Entity;
				if (((previousValue != value) 
							|| (this._refCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refCountry.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._refCountry.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._countryId = value.id;
					}
					else
					{
						this._countryId = default(string);
					}
					this.SendPropertyChanged("refCountry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessAddresses(BusinessAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_BusinessAddresses(BusinessAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ContactAddresses(ContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ContactAddresses(ContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refCountry")]
	public partial class refCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _countryName;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OncountryNameChanging(string value);
    partial void OncountryNameChanged();
    #endregion
		
		public refCountry()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryName", DbType="VarChar(100)")]
		public string countryName
		{
			get
			{
				return this._countryName;
			}
			set
			{
				if ((this._countryName != value))
				{
					this.OncountryNameChanging(value);
					this.SendPropertyChanging();
					this._countryName = value;
					this.SendPropertyChanged("countryName");
					this.OncountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refCountry_Address", Storage="_Addresses", ThisKey="id", OtherKey="countryId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.refCountry = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.refCountry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintVersion")]
	public partial class PrintVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _periodOfOperationTypeId;
		
		private System.Nullable<byte> _openMonth;
		
		private System.Nullable<byte> _openDay;
		
		private System.Nullable<byte> _closeMonth;
		
		private System.Nullable<byte> _closeDay;
		
		private System.Nullable<decimal> _lowRate;
		
		private System.Nullable<decimal> _highRate;
		
		private System.Nullable<decimal> _extraPersonRate;
		
		private System.Nullable<byte> _rateTypeId;
		
		private System.Nullable<byte> _ratePeriodId;
		
		private bool _hasOffSeasonRates;
		
		private bool _hasOffSeasonDates;
		
		private System.Nullable<byte> _cancellationPolicyId;
		
		private bool _noTax;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnperiodOfOperationTypeIdChanging(byte value);
    partial void OnperiodOfOperationTypeIdChanged();
    partial void OnopenMonthChanging(System.Nullable<byte> value);
    partial void OnopenMonthChanged();
    partial void OnopenDayChanging(System.Nullable<byte> value);
    partial void OnopenDayChanged();
    partial void OncloseMonthChanging(System.Nullable<byte> value);
    partial void OncloseMonthChanged();
    partial void OncloseDayChanging(System.Nullable<byte> value);
    partial void OncloseDayChanged();
    partial void OnlowRateChanging(System.Nullable<decimal> value);
    partial void OnlowRateChanged();
    partial void OnhighRateChanging(System.Nullable<decimal> value);
    partial void OnhighRateChanged();
    partial void OnextraPersonRateChanging(System.Nullable<decimal> value);
    partial void OnextraPersonRateChanged();
    partial void OnrateTypeIdChanging(System.Nullable<byte> value);
    partial void OnrateTypeIdChanged();
    partial void OnratePeriodIdChanging(System.Nullable<byte> value);
    partial void OnratePeriodIdChanged();
    partial void OnhasOffSeasonRatesChanging(bool value);
    partial void OnhasOffSeasonRatesChanged();
    partial void OnhasOffSeasonDatesChanging(bool value);
    partial void OnhasOffSeasonDatesChanged();
    partial void OncancellationPolicyIdChanging(System.Nullable<byte> value);
    partial void OncancellationPolicyIdChanged();
    partial void OnnoTaxChanging(bool value);
    partial void OnnoTaxChanged();
    #endregion
		
		public PrintVersion()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodOfOperationTypeId", DbType="TinyInt NOT NULL")]
		public byte periodOfOperationTypeId
		{
			get
			{
				return this._periodOfOperationTypeId;
			}
			set
			{
				if ((this._periodOfOperationTypeId != value))
				{
					this.OnperiodOfOperationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._periodOfOperationTypeId = value;
					this.SendPropertyChanged("periodOfOperationTypeId");
					this.OnperiodOfOperationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openMonth", DbType="TinyInt")]
		public System.Nullable<byte> openMonth
		{
			get
			{
				return this._openMonth;
			}
			set
			{
				if ((this._openMonth != value))
				{
					this.OnopenMonthChanging(value);
					this.SendPropertyChanging();
					this._openMonth = value;
					this.SendPropertyChanged("openMonth");
					this.OnopenMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openDay", DbType="TinyInt")]
		public System.Nullable<byte> openDay
		{
			get
			{
				return this._openDay;
			}
			set
			{
				if ((this._openDay != value))
				{
					this.OnopenDayChanging(value);
					this.SendPropertyChanging();
					this._openDay = value;
					this.SendPropertyChanged("openDay");
					this.OnopenDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closeMonth", DbType="TinyInt")]
		public System.Nullable<byte> closeMonth
		{
			get
			{
				return this._closeMonth;
			}
			set
			{
				if ((this._closeMonth != value))
				{
					this.OncloseMonthChanging(value);
					this.SendPropertyChanging();
					this._closeMonth = value;
					this.SendPropertyChanged("closeMonth");
					this.OncloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closeDay", DbType="TinyInt")]
		public System.Nullable<byte> closeDay
		{
			get
			{
				return this._closeDay;
			}
			set
			{
				if ((this._closeDay != value))
				{
					this.OncloseDayChanging(value);
					this.SendPropertyChanging();
					this._closeDay = value;
					this.SendPropertyChanged("closeDay");
					this.OncloseDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lowRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> lowRate
		{
			get
			{
				return this._lowRate;
			}
			set
			{
				if ((this._lowRate != value))
				{
					this.OnlowRateChanging(value);
					this.SendPropertyChanging();
					this._lowRate = value;
					this.SendPropertyChanged("lowRate");
					this.OnlowRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> highRate
		{
			get
			{
				return this._highRate;
			}
			set
			{
				if ((this._highRate != value))
				{
					this.OnhighRateChanging(value);
					this.SendPropertyChanging();
					this._highRate = value;
					this.SendPropertyChanged("highRate");
					this.OnhighRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extraPersonRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> extraPersonRate
		{
			get
			{
				return this._extraPersonRate;
			}
			set
			{
				if ((this._extraPersonRate != value))
				{
					this.OnextraPersonRateChanging(value);
					this.SendPropertyChanging();
					this._extraPersonRate = value;
					this.SendPropertyChanged("extraPersonRate");
					this.OnextraPersonRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateTypeId", DbType="TinyInt")]
		public System.Nullable<byte> rateTypeId
		{
			get
			{
				return this._rateTypeId;
			}
			set
			{
				if ((this._rateTypeId != value))
				{
					this.OnrateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._rateTypeId = value;
					this.SendPropertyChanged("rateTypeId");
					this.OnrateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratePeriodId", DbType="TinyInt")]
		public System.Nullable<byte> ratePeriodId
		{
			get
			{
				return this._ratePeriodId;
			}
			set
			{
				if ((this._ratePeriodId != value))
				{
					this.OnratePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._ratePeriodId = value;
					this.SendPropertyChanged("ratePeriodId");
					this.OnratePeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasOffSeasonRates", DbType="Bit NOT NULL")]
		public bool hasOffSeasonRates
		{
			get
			{
				return this._hasOffSeasonRates;
			}
			set
			{
				if ((this._hasOffSeasonRates != value))
				{
					this.OnhasOffSeasonRatesChanging(value);
					this.SendPropertyChanging();
					this._hasOffSeasonRates = value;
					this.SendPropertyChanged("hasOffSeasonRates");
					this.OnhasOffSeasonRatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasOffSeasonDates", DbType="Bit NOT NULL")]
		public bool hasOffSeasonDates
		{
			get
			{
				return this._hasOffSeasonDates;
			}
			set
			{
				if ((this._hasOffSeasonDates != value))
				{
					this.OnhasOffSeasonDatesChanging(value);
					this.SendPropertyChanging();
					this._hasOffSeasonDates = value;
					this.SendPropertyChanged("hasOffSeasonDates");
					this.OnhasOffSeasonDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancellationPolicyId", DbType="TinyInt")]
		public System.Nullable<byte> cancellationPolicyId
		{
			get
			{
				return this._cancellationPolicyId;
			}
			set
			{
				if ((this._cancellationPolicyId != value))
				{
					this.OncancellationPolicyIdChanging(value);
					this.SendPropertyChanging();
					this._cancellationPolicyId = value;
					this.SendPropertyChanged("cancellationPolicyId");
					this.OncancellationPolicyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noTax", DbType="Bit NOT NULL")]
		public bool noTax
		{
			get
			{
				return this._noTax;
			}
			set
			{
				if ((this._noTax != value))
				{
					this.OnnoTaxChanging(value);
					this.SendPropertyChanging();
					this._noTax = value;
					this.SendPropertyChanged("noTax");
					this.OnnoTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PrintVersion", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.PrintVersion = null;
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.PrintVersion = this;
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileMakerArchive")]
	public partial class FileMakerArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fileMakerId;
		
		private byte _archiveTypeId;
		
		private string _archive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileMakerIdChanging(string value);
    partial void OnfileMakerIdChanged();
    partial void OnarchiveTypeIdChanging(byte value);
    partial void OnarchiveTypeIdChanged();
    partial void OnarchiveChanging(string value);
    partial void OnarchiveChanged();
    #endregion
		
		public FileMakerArchive()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileMakerId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fileMakerId
		{
			get
			{
				return this._fileMakerId;
			}
			set
			{
				if ((this._fileMakerId != value))
				{
					this.OnfileMakerIdChanging(value);
					this.SendPropertyChanging();
					this._fileMakerId = value;
					this.SendPropertyChanged("fileMakerId");
					this.OnfileMakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_archiveTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte archiveTypeId
		{
			get
			{
				return this._archiveTypeId;
			}
			set
			{
				if ((this._archiveTypeId != value))
				{
					this.OnarchiveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._archiveTypeId = value;
					this.SendPropertyChanged("archiveTypeId");
					this.OnarchiveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_archive", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string archive
		{
			get
			{
				return this._archive;
			}
			set
			{
				if ((this._archive != value))
				{
					this.OnarchiveChanging(value);
					this.SendPropertyChanging();
					this._archive = value;
					this.SendPropertyChanged("archive");
					this.OnarchiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refSubRegion")]
	public partial class refSubRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _subRegionName;
		
		private EntitySet<refCommunity> _refCommunities;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OnsubRegionNameChanging(string value);
    partial void OnsubRegionNameChanged();
    #endregion
		
		public refSubRegion()
		{
			this._refCommunities = new EntitySet<refCommunity>(new Action<refCommunity>(this.attach_refCommunities), new Action<refCommunity>(this.detach_refCommunities));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subRegionName", DbType="VarChar(100)")]
		public string subRegionName
		{
			get
			{
				return this._subRegionName;
			}
			set
			{
				if ((this._subRegionName != value))
				{
					this.OnsubRegionNameChanging(value);
					this.SendPropertyChanging();
					this._subRegionName = value;
					this.SendPropertyChanged("subRegionName");
					this.OnsubRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refSubRegion_refCommunity", Storage="_refCommunities", ThisKey="id", OtherKey="subRegionId")]
		public EntitySet<refCommunity> refCommunities
		{
			get
			{
				return this._refCommunities;
			}
			set
			{
				this._refCommunities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refSubRegion_Product", Storage="_Products", ThisKey="id", OtherKey="subRegionId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_refCommunities(refCommunity entity)
		{
			this.SendPropertyChanging();
			entity.refSubRegion = this;
		}
		
		private void detach_refCommunities(refCommunity entity)
		{
			this.SendPropertyChanging();
			entity.refSubRegion = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.refSubRegion = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.refSubRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refRegion")]
	public partial class refRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id;
		
		private string _regionName;
		
		private System.Nullable<byte> _guideSortOrder;
		
		private EntitySet<ProductRegionOfOperation> _ProductRegionOfOperations;
		
		private EntitySet<refCommunity> _refCommunities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(byte value);
    partial void OnidChanged();
    partial void OnregionNameChanging(string value);
    partial void OnregionNameChanged();
    partial void OnguideSortOrderChanging(System.Nullable<byte> value);
    partial void OnguideSortOrderChanged();
    #endregion
		
		public refRegion()
		{
			this._ProductRegionOfOperations = new EntitySet<ProductRegionOfOperation>(new Action<ProductRegionOfOperation>(this.attach_ProductRegionOfOperations), new Action<ProductRegionOfOperation>(this.detach_ProductRegionOfOperations));
			this._refCommunities = new EntitySet<refCommunity>(new Action<refCommunity>(this.attach_refCommunities), new Action<refCommunity>(this.detach_refCommunities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionName", DbType="VarChar(100)")]
		public string regionName
		{
			get
			{
				return this._regionName;
			}
			set
			{
				if ((this._regionName != value))
				{
					this.OnregionNameChanging(value);
					this.SendPropertyChanging();
					this._regionName = value;
					this.SendPropertyChanged("regionName");
					this.OnregionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guideSortOrder", DbType="TinyInt")]
		public System.Nullable<byte> guideSortOrder
		{
			get
			{
				return this._guideSortOrder;
			}
			set
			{
				if ((this._guideSortOrder != value))
				{
					this.OnguideSortOrderChanging(value);
					this.SendPropertyChanging();
					this._guideSortOrder = value;
					this.SendPropertyChanged("guideSortOrder");
					this.OnguideSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refRegion_ProductRegionOfOperation", Storage="_ProductRegionOfOperations", ThisKey="id", OtherKey="regionId")]
		public EntitySet<ProductRegionOfOperation> ProductRegionOfOperations
		{
			get
			{
				return this._ProductRegionOfOperations;
			}
			set
			{
				this._ProductRegionOfOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refRegion_refCommunity", Storage="_refCommunities", ThisKey="id", OtherKey="regionId")]
		public EntitySet<refCommunity> refCommunities
		{
			get
			{
				return this._refCommunities;
			}
			set
			{
				this._refCommunities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductRegionOfOperations(ProductRegionOfOperation entity)
		{
			this.SendPropertyChanging();
			entity.refRegion = this;
		}
		
		private void detach_ProductRegionOfOperations(ProductRegionOfOperation entity)
		{
			this.SendPropertyChanging();
			entity.refRegion = null;
		}
		
		private void attach_refCommunities(refCommunity entity)
		{
			this.SendPropertyChanging();
			entity.refRegion = this;
		}
		
		private void detach_refCommunities(refCommunity entity)
		{
			this.SendPropertyChanging();
			entity.refRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refCounty")]
	public partial class refCounty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id;
		
		private string _countyName;
		
		private EntitySet<refCommunity> _refCommunities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(byte value);
    partial void OnidChanged();
    partial void OncountyNameChanging(string value);
    partial void OncountyNameChanged();
    #endregion
		
		public refCounty()
		{
			this._refCommunities = new EntitySet<refCommunity>(new Action<refCommunity>(this.attach_refCommunities), new Action<refCommunity>(this.detach_refCommunities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string countyName
		{
			get
			{
				return this._countyName;
			}
			set
			{
				if ((this._countyName != value))
				{
					this.OncountyNameChanging(value);
					this.SendPropertyChanging();
					this._countyName = value;
					this.SendPropertyChanged("countyName");
					this.OncountyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refCounty_refCommunity", Storage="_refCommunities", ThisKey="id", OtherKey="countyId")]
		public EntitySet<refCommunity> refCommunities
		{
			get
			{
				return this._refCommunities;
			}
			set
			{
				this._refCommunities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_refCommunities(refCommunity entity)
		{
			this.SendPropertyChanging();
			entity.refCounty = this;
		}
		
		private void detach_refCommunities(refCommunity entity)
		{
			this.SendPropertyChanging();
			entity.refCounty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.refCommunity")]
	public partial class refCommunity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _communityName;
		
		private byte _regionId;
		
		private System.Nullable<short> _subRegionId;
		
		private System.Nullable<byte> _countyId;
		
		private string _guideIndex;
		
		private System.Nullable<short> _guideSortOrder;
		
		private string _interfaceName;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<refCounty> _refCounty;
		
		private EntityRef<refRegion> _refRegion;
		
		private EntityRef<refSubRegion> _refSubRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OncommunityNameChanging(string value);
    partial void OncommunityNameChanged();
    partial void OnregionIdChanging(byte value);
    partial void OnregionIdChanged();
    partial void OnsubRegionIdChanging(System.Nullable<short> value);
    partial void OnsubRegionIdChanged();
    partial void OncountyIdChanging(System.Nullable<byte> value);
    partial void OncountyIdChanged();
    partial void OnguideIndexChanging(string value);
    partial void OnguideIndexChanged();
    partial void OnguideSortOrderChanging(System.Nullable<short> value);
    partial void OnguideSortOrderChanged();
    partial void OninterfaceNameChanging(string value);
    partial void OninterfaceNameChanged();
    #endregion
		
		public refCommunity()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._refCounty = default(EntityRef<refCounty>);
			this._refRegion = default(EntityRef<refRegion>);
			this._refSubRegion = default(EntityRef<refSubRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_communityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string communityName
		{
			get
			{
				return this._communityName;
			}
			set
			{
				if ((this._communityName != value))
				{
					this.OncommunityNameChanging(value);
					this.SendPropertyChanging();
					this._communityName = value;
					this.SendPropertyChanged("communityName");
					this.OncommunityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionId", DbType="TinyInt NOT NULL")]
		public byte regionId
		{
			get
			{
				return this._regionId;
			}
			set
			{
				if ((this._regionId != value))
				{
					if (this._refRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnregionIdChanging(value);
					this.SendPropertyChanging();
					this._regionId = value;
					this.SendPropertyChanged("regionId");
					this.OnregionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subRegionId", DbType="SmallInt")]
		public System.Nullable<short> subRegionId
		{
			get
			{
				return this._subRegionId;
			}
			set
			{
				if ((this._subRegionId != value))
				{
					if (this._refSubRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubRegionIdChanging(value);
					this.SendPropertyChanging();
					this._subRegionId = value;
					this.SendPropertyChanged("subRegionId");
					this.OnsubRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countyId", DbType="TinyInt")]
		public System.Nullable<byte> countyId
		{
			get
			{
				return this._countyId;
			}
			set
			{
				if ((this._countyId != value))
				{
					if (this._refCounty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountyIdChanging(value);
					this.SendPropertyChanging();
					this._countyId = value;
					this.SendPropertyChanged("countyId");
					this.OncountyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guideIndex", DbType="VarChar(10)")]
		public string guideIndex
		{
			get
			{
				return this._guideIndex;
			}
			set
			{
				if ((this._guideIndex != value))
				{
					this.OnguideIndexChanging(value);
					this.SendPropertyChanging();
					this._guideIndex = value;
					this.SendPropertyChanged("guideIndex");
					this.OnguideIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guideSortOrder", DbType="SmallInt")]
		public System.Nullable<short> guideSortOrder
		{
			get
			{
				return this._guideSortOrder;
			}
			set
			{
				if ((this._guideSortOrder != value))
				{
					this.OnguideSortOrderChanging(value);
					this.SendPropertyChanging();
					this._guideSortOrder = value;
					this.SendPropertyChanged("guideSortOrder");
					this.OnguideSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interfaceName", DbType="VarChar(50)")]
		public string interfaceName
		{
			get
			{
				return this._interfaceName;
			}
			set
			{
				if ((this._interfaceName != value))
				{
					this.OninterfaceNameChanging(value);
					this.SendPropertyChanging();
					this._interfaceName = value;
					this.SendPropertyChanged("interfaceName");
					this.OninterfaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refCommunity_Product", Storage="_Products", ThisKey="id", OtherKey="communityId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refCounty_refCommunity", Storage="_refCounty", ThisKey="countyId", OtherKey="id", IsForeignKey=true)]
		public refCounty refCounty
		{
			get
			{
				return this._refCounty.Entity;
			}
			set
			{
				refCounty previousValue = this._refCounty.Entity;
				if (((previousValue != value) 
							|| (this._refCounty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refCounty.Entity = null;
						previousValue.refCommunities.Remove(this);
					}
					this._refCounty.Entity = value;
					if ((value != null))
					{
						value.refCommunities.Add(this);
						this._countyId = value.id;
					}
					else
					{
						this._countyId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("refCounty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refRegion_refCommunity", Storage="_refRegion", ThisKey="regionId", OtherKey="id", IsForeignKey=true)]
		public refRegion refRegion
		{
			get
			{
				return this._refRegion.Entity;
			}
			set
			{
				refRegion previousValue = this._refRegion.Entity;
				if (((previousValue != value) 
							|| (this._refRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refRegion.Entity = null;
						previousValue.refCommunities.Remove(this);
					}
					this._refRegion.Entity = value;
					if ((value != null))
					{
						value.refCommunities.Add(this);
						this._regionId = value.id;
					}
					else
					{
						this._regionId = default(byte);
					}
					this.SendPropertyChanged("refRegion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refSubRegion_refCommunity", Storage="_refSubRegion", ThisKey="subRegionId", OtherKey="id", IsForeignKey=true)]
		public refSubRegion refSubRegion
		{
			get
			{
				return this._refSubRegion.Entity;
			}
			set
			{
				refSubRegion previousValue = this._refSubRegion.Entity;
				if (((previousValue != value) 
							|| (this._refSubRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refSubRegion.Entity = null;
						previousValue.refCommunities.Remove(this);
					}
					this._refSubRegion.Entity = value;
					if ((value != null))
					{
						value.refCommunities.Add(this);
						this._subRegionId = value.id;
					}
					else
					{
						this._subRegionId = default(Nullable<short>);
					}
					this.SendPropertyChanged("refSubRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.refCommunity = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.refCommunity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductUnitNumber")]
	public partial class ProductUnitNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private byte _unitTypeId;
		
		private int _units;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnunitTypeIdChanging(byte value);
    partial void OnunitTypeIdChanged();
    partial void OnunitsChanging(int value);
    partial void OnunitsChanged();
    #endregion
		
		public ProductUnitNumber()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte unitTypeId
		{
			get
			{
				return this._unitTypeId;
			}
			set
			{
				if ((this._unitTypeId != value))
				{
					this.OnunitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._unitTypeId = value;
					this.SendPropertyChanged("unitTypeId");
					this.OnunitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_units", DbType="Int NOT NULL")]
		public int units
		{
			get
			{
				return this._units;
			}
			set
			{
				if ((this._units != value))
				{
					this.OnunitsChanging(value);
					this.SendPropertyChanging();
					this._units = value;
					this.SendPropertyChanged("units");
					this.OnunitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductUnitNumber", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductUnitNumbers.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductUnitNumbers.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private byte _contactTypeId;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _jobTitle;
		
		private string _email;
		
		private string _comment;
		
		private int _businessId;
		
		private string _fileMakerId;
		
		private bool _isPrimary;
		
		private bool _isDeleted;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private EntitySet<ContactAddress> _ContactAddresses;
		
		private EntitySet<ContactNote> _ContactNotes;
		
		private EntitySet<ContactPhone> _ContactPhones;
		
		private EntitySet<ContactProduct> _ContactProducts;
		
		private EntityRef<Business> _Business;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontactTypeIdChanging(byte value);
    partial void OncontactTypeIdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnjobTitleChanging(string value);
    partial void OnjobTitleChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnbusinessIdChanging(int value);
    partial void OnbusinessIdChanged();
    partial void OnfileMakerIdChanging(string value);
    partial void OnfileMakerIdChanged();
    partial void OnisPrimaryChanging(bool value);
    partial void OnisPrimaryChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    #endregion
		
		public Contact()
		{
			this._ContactAddresses = new EntitySet<ContactAddress>(new Action<ContactAddress>(this.attach_ContactAddresses), new Action<ContactAddress>(this.detach_ContactAddresses));
			this._ContactNotes = new EntitySet<ContactNote>(new Action<ContactNote>(this.attach_ContactNotes), new Action<ContactNote>(this.detach_ContactNotes));
			this._ContactPhones = new EntitySet<ContactPhone>(new Action<ContactPhone>(this.attach_ContactPhones), new Action<ContactPhone>(this.detach_ContactPhones));
			this._ContactProducts = new EntitySet<ContactProduct>(new Action<ContactProduct>(this.attach_ContactProducts), new Action<ContactProduct>(this.detach_ContactProducts));
			this._Business = default(EntityRef<Business>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactTypeId", DbType="TinyInt NOT NULL")]
		public byte contactTypeId
		{
			get
			{
				return this._contactTypeId;
			}
			set
			{
				if ((this._contactTypeId != value))
				{
					this.OncontactTypeIdChanging(value);
					this.SendPropertyChanging();
					this._contactTypeId = value;
					this.SendPropertyChanged("contactTypeId");
					this.OncontactTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(100)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(100)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitle", DbType="NVarChar(100)")]
		public string jobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this.OnjobTitleChanging(value);
					this.SendPropertyChanging();
					this._jobTitle = value;
					this.SendPropertyChanged("jobTitle");
					this.OnjobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(1000)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessId", DbType="Int NOT NULL")]
		public int businessId
		{
			get
			{
				return this._businessId;
			}
			set
			{
				if ((this._businessId != value))
				{
					if (this._Business.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessIdChanging(value);
					this.SendPropertyChanging();
					this._businessId = value;
					this.SendPropertyChanged("businessId");
					this.OnbusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileMakerId", DbType="VarChar(10)")]
		public string fileMakerId
		{
			get
			{
				return this._fileMakerId;
			}
			set
			{
				if ((this._fileMakerId != value))
				{
					this.OnfileMakerIdChanging(value);
					this.SendPropertyChanging();
					this._fileMakerId = value;
					this.SendPropertyChanged("fileMakerId");
					this.OnfileMakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit NOT NULL")]
		public bool isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this.OnisPrimaryChanging(value);
					this.SendPropertyChanging();
					this._isPrimary = value;
					this.SendPropertyChanged("isPrimary");
					this.OnisPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactAddress", Storage="_ContactAddresses", ThisKey="id", OtherKey="contactId")]
		public EntitySet<ContactAddress> ContactAddresses
		{
			get
			{
				return this._ContactAddresses;
			}
			set
			{
				this._ContactAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactNote", Storage="_ContactNotes", ThisKey="id", OtherKey="contactId")]
		public EntitySet<ContactNote> ContactNotes
		{
			get
			{
				return this._ContactNotes;
			}
			set
			{
				this._ContactNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactPhone", Storage="_ContactPhones", ThisKey="id", OtherKey="contactId")]
		public EntitySet<ContactPhone> ContactPhones
		{
			get
			{
				return this._ContactPhones;
			}
			set
			{
				this._ContactPhones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactProduct", Storage="_ContactProducts", ThisKey="id", OtherKey="contactId")]
		public EntitySet<ContactProduct> ContactProducts
		{
			get
			{
				return this._ContactProducts;
			}
			set
			{
				this._ContactProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Contact", Storage="_Business", ThisKey="businessId", OtherKey="id", IsForeignKey=true)]
		public Business Business
		{
			get
			{
				return this._Business.Entity;
			}
			set
			{
				Business previousValue = this._Business.Entity;
				if (((previousValue != value) 
							|| (this._Business.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Business.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._businessId = value.id;
					}
					else
					{
						this._businessId = default(int);
					}
					this.SendPropertyChanged("Business");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactAddresses(ContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ContactAddresses(ContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_ContactNotes(ContactNote entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ContactNotes(ContactNote entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_ContactPhones(ContactPhone entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ContactPhones(ContactPhone entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_ContactProducts(ContactProduct entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ContactProducts(ContactProduct entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperationPeriod")]
	public partial class OperationPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _productId;
		
		private System.DateTime _openDate;
		
		private System.Nullable<System.DateTime> _closeDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnopenDateChanging(System.DateTime value);
    partial void OnopenDateChanged();
    partial void OncloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OncloseDateChanged();
    #endregion
		
		public OperationPeriod()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openDate", DbType="DateTime NOT NULL")]
		public System.DateTime openDate
		{
			get
			{
				return this._openDate;
			}
			set
			{
				if ((this._openDate != value))
				{
					this.OnopenDateChanging(value);
					this.SendPropertyChanging();
					this._openDate = value;
					this.SendPropertyChanged("openDate");
					this.OnopenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> closeDate
		{
			get
			{
				return this._closeDate;
			}
			set
			{
				if ((this._closeDate != value))
				{
					this.OncloseDateChanging(value);
					this.SendPropertyChanging();
					this._closeDate = value;
					this.SendPropertyChanged("closeDate");
					this.OncloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OperationPeriod", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OperationPeriods.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OperationPeriods.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTag")]
	public partial class ProductTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private int _tagId;
		
		private EntityRef<Tag> _Tag;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OntagIdChanging(int value);
    partial void OntagIdChanged();
    #endregion
		
		public ProductTag()
		{
			this._Tag = default(EntityRef<Tag>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tagId
		{
			get
			{
				return this._tagId;
			}
			set
			{
				if ((this._tagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntagIdChanging(value);
					this.SendPropertyChanging();
					this._tagId = value;
					this.SendPropertyChanged("tagId");
					this.OntagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ProductTag", Storage="_Tag", ThisKey="tagId", OtherKey="id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.ProductTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.ProductTags.Add(this);
						this._tagId = value.id;
					}
					else
					{
						this._tagId = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductTag", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductTags.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductTags.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tagName;
		
		private EntitySet<ProductTag> _ProductTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntagNameChanging(string value);
    partial void OntagNameChanged();
    #endregion
		
		public Tag()
		{
			this._ProductTags = new EntitySet<ProductTag>(new Action<ProductTag>(this.attach_ProductTags), new Action<ProductTag>(this.detach_ProductTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagName", DbType="VarChar(100)")]
		public string tagName
		{
			get
			{
				return this._tagName;
			}
			set
			{
				if ((this._tagName != value))
				{
					this.OntagNameChanging(value);
					this.SendPropertyChanging();
					this._tagName = value;
					this.SendPropertyChanged("tagName");
					this.OntagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ProductTag", Storage="_ProductTags", ThisKey="id", OtherKey="tagId")]
		public EntitySet<ProductTag> ProductTags
		{
			get
			{
				return this._ProductTags;
			}
			set
			{
				this._ProductTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductTags(ProductTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_ProductTags(ProductTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionPeriod")]
	public partial class PromotionPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _productId;
		
		private System.DateTime _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateChanged();
    #endregion
		
		public PromotionPeriod()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PromotionPeriod", Storage="_Product", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.PromotionPeriods.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.PromotionPeriods.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private byte _productTypeId;
		
		private string _productName;
		
		private string _line1;
		
		private string _line2;
		
		private string _line3;
		
		private string _city;
		
		private string _postalCode;
		
		private System.Nullable<short> _communityId;
		
		private System.Nullable<short> _subRegionId;
		
		private System.Nullable<decimal> _latitude;
		
		private System.Nullable<decimal> _longitude;
		
		private string _proprietor;
		
		private string _email;
		
		private string _web;
		
		private string _telephone;
		
		private string _secondaryPhone;
		
		private string _offSeasonPhone;
		
		private string _fax;
		
		private string _tollfree;
		
		private System.Nullable<byte> _tollfreeAreaId;
		
		private bool _reservationsOnly;
		
		private bool _isCheckinMember;
		
		private string _checkInId;
		
		private System.Nullable<byte> _accessCanadaRating;
		
		private System.Nullable<decimal> _lowRate;
		
		private System.Nullable<decimal> _highRate;
		
		private System.Nullable<decimal> _extraPersonRate;
		
		private byte _periodOfOperationTypeId;
		
		private System.Nullable<byte> _rateTypeId;
		
		private System.Nullable<byte> _ratePeriodId;
		
		private System.Nullable<byte> _primaryGuideSectionId;
		
		private System.Nullable<byte> _openMonth;
		
		private System.Nullable<byte> _openDay;
		
		private System.Nullable<byte> _closeMonth;
		
		private System.Nullable<byte> _closeDay;
		
		private bool _hasOffSeasonRates;
		
		private bool _hasOffSeasonDates;
		
		private bool _noTax;
		
		private System.Nullable<byte> _cancellationPolicyId;
		
		private string _fileMakerId;
		
		private System.Nullable<short> _parkingSpaces;
		
		private System.Nullable<short> _seatingCapacityInterior;
		
		private System.Nullable<short> _seatingCapacityExterior;
		
		private string _otherMemberships;
		
		private string _licenseNumber;
		
		private string _checkboxLabel;
		
		private bool _paymentReceived;
		
		private System.Nullable<decimal> _paymentAmount;
		
		private System.Nullable<int> _attendance;
		
		private System.Nullable<System.DateTime> _confirmationDueDate;
		
		private System.Nullable<byte> _ownershipTypeId;
		
		private System.Nullable<byte> _sustainabilityTypeId;
		
		private System.Nullable<byte> _capacityTypeId;
		
		private System.Nullable<byte> _listingQuality;
		
		private bool _isFeatured;
		
		private bool _isTicketed;
		
		private bool _isValid;
		
		private bool _isComplete;
		
		private bool _isActive;
		
		private bool _overrideErrors;
		
		private bool _isDeleted;
		
		private string _lastModifiedBy;
		
		private System.Nullable<System.DateTime> _lastModifiedDate;
		
		private System.Nullable<System.DateTime> _confirmationLastReceived;
		
		private System.Nullable<decimal> _trailDistance;
		
		private System.Nullable<decimal> _trailDuration;
		
		private string _registryNumber;
		
		private EntitySet<ContactProduct> _ContactProducts;
		
		private EntitySet<Media> _Medias;
		
		private EntitySet<PrintVersionTranslation> _PrintVersionTranslations;
		
		private EntitySet<ProductAttribute> _ProductAttributes;
		
		private EntitySet<ProductDescription> _ProductDescriptions;
		
		private EntitySet<ProductNote> _ProductNotes;
		
		private EntitySet<ProductPaymentType> _ProductPaymentTypes;
		
		private EntitySet<ProductRegionOfOperation> _ProductRegionOfOperations;
		
		private EntitySet<ProductTranslation> _ProductTranslations;
		
		private EntitySet<TranslationStatus> _TranslationStatus;
		
		private EntitySet<Url> _Urls;
		
		private EntitySet<ProductCaaRating> _ProductCaaRatings;
		
		private EntitySet<ProductCanadaSelectRating> _ProductCanadaSelectRatings;
		
		private EntityRef<PrintVersion> _PrintVersion;
		
		private EntitySet<ProductUnitNumber> _ProductUnitNumbers;
		
		private EntitySet<OperationPeriod> _OperationPeriods;
		
		private EntitySet<ProductTag> _ProductTags;
		
		private EntitySet<PromotionPeriod> _PromotionPeriods;
		
		private EntityRef<refCommunity> _refCommunity;
		
		private EntityRef<refGuideSection> _refGuideSection;
		
		private EntityRef<refSubRegion> _refSubRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproductTypeIdChanging(byte value);
    partial void OnproductTypeIdChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void Online1Changing(string value);
    partial void Online1Changed();
    partial void Online2Changing(string value);
    partial void Online2Changed();
    partial void Online3Changing(string value);
    partial void Online3Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OncommunityIdChanging(System.Nullable<short> value);
    partial void OncommunityIdChanged();
    partial void OnsubRegionIdChanging(System.Nullable<short> value);
    partial void OnsubRegionIdChanged();
    partial void OnlatitudeChanging(System.Nullable<decimal> value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(System.Nullable<decimal> value);
    partial void OnlongitudeChanged();
    partial void OnproprietorChanging(string value);
    partial void OnproprietorChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnwebChanging(string value);
    partial void OnwebChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnsecondaryPhoneChanging(string value);
    partial void OnsecondaryPhoneChanged();
    partial void OnoffSeasonPhoneChanging(string value);
    partial void OnoffSeasonPhoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OntollfreeChanging(string value);
    partial void OntollfreeChanged();
    partial void OntollfreeAreaIdChanging(System.Nullable<byte> value);
    partial void OntollfreeAreaIdChanged();
    partial void OnreservationsOnlyChanging(bool value);
    partial void OnreservationsOnlyChanged();
    partial void OnisCheckinMemberChanging(bool value);
    partial void OnisCheckinMemberChanged();
    partial void OncheckInIdChanging(string value);
    partial void OncheckInIdChanged();
    partial void OnaccessCanadaRatingChanging(System.Nullable<byte> value);
    partial void OnaccessCanadaRatingChanged();
    partial void OnlowRateChanging(System.Nullable<decimal> value);
    partial void OnlowRateChanged();
    partial void OnhighRateChanging(System.Nullable<decimal> value);
    partial void OnhighRateChanged();
    partial void OnextraPersonRateChanging(System.Nullable<decimal> value);
    partial void OnextraPersonRateChanged();
    partial void OnperiodOfOperationTypeIdChanging(byte value);
    partial void OnperiodOfOperationTypeIdChanged();
    partial void OnrateTypeIdChanging(System.Nullable<byte> value);
    partial void OnrateTypeIdChanged();
    partial void OnratePeriodIdChanging(System.Nullable<byte> value);
    partial void OnratePeriodIdChanged();
    partial void OnprimaryGuideSectionIdChanging(System.Nullable<byte> value);
    partial void OnprimaryGuideSectionIdChanged();
    partial void OnopenMonthChanging(System.Nullable<byte> value);
    partial void OnopenMonthChanged();
    partial void OnopenDayChanging(System.Nullable<byte> value);
    partial void OnopenDayChanged();
    partial void OncloseMonthChanging(System.Nullable<byte> value);
    partial void OncloseMonthChanged();
    partial void OncloseDayChanging(System.Nullable<byte> value);
    partial void OncloseDayChanged();
    partial void OnhasOffSeasonRatesChanging(bool value);
    partial void OnhasOffSeasonRatesChanged();
    partial void OnhasOffSeasonDatesChanging(bool value);
    partial void OnhasOffSeasonDatesChanged();
    partial void OnnoTaxChanging(bool value);
    partial void OnnoTaxChanged();
    partial void OncancellationPolicyIdChanging(System.Nullable<byte> value);
    partial void OncancellationPolicyIdChanged();
    partial void OnfileMakerIdChanging(string value);
    partial void OnfileMakerIdChanged();
    partial void OnparkingSpacesChanging(System.Nullable<short> value);
    partial void OnparkingSpacesChanged();
    partial void OnseatingCapacityInteriorChanging(System.Nullable<short> value);
    partial void OnseatingCapacityInteriorChanged();
    partial void OnseatingCapacityExteriorChanging(System.Nullable<short> value);
    partial void OnseatingCapacityExteriorChanged();
    partial void OnotherMembershipsChanging(string value);
    partial void OnotherMembershipsChanged();
    partial void OnlicenseNumberChanging(string value);
    partial void OnlicenseNumberChanged();
    partial void OncheckboxLabelChanging(string value);
    partial void OncheckboxLabelChanged();
    partial void OnpaymentReceivedChanging(bool value);
    partial void OnpaymentReceivedChanged();
    partial void OnpaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnpaymentAmountChanged();
    partial void OnattendanceChanging(System.Nullable<int> value);
    partial void OnattendanceChanged();
    partial void OnconfirmationDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnconfirmationDueDateChanged();
    partial void OnownershipTypeIdChanging(System.Nullable<byte> value);
    partial void OnownershipTypeIdChanged();
    partial void OnsustainabilityTypeIdChanging(System.Nullable<byte> value);
    partial void OnsustainabilityTypeIdChanged();
    partial void OncapacityTypeIdChanging(System.Nullable<byte> value);
    partial void OncapacityTypeIdChanged();
    partial void OnlistingQualityChanging(System.Nullable<byte> value);
    partial void OnlistingQualityChanged();
    partial void OnisFeaturedChanging(bool value);
    partial void OnisFeaturedChanged();
    partial void OnisTicketedChanging(bool value);
    partial void OnisTicketedChanged();
    partial void OnisValidChanging(bool value);
    partial void OnisValidChanged();
    partial void OnisCompleteChanging(bool value);
    partial void OnisCompleteChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnoverrideErrorsChanging(bool value);
    partial void OnoverrideErrorsChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    partial void OnlastModifiedByChanging(string value);
    partial void OnlastModifiedByChanged();
    partial void OnlastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastModifiedDateChanged();
    partial void OnconfirmationLastReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnconfirmationLastReceivedChanged();
    partial void OntrailDistanceChanging(System.Nullable<decimal> value);
    partial void OntrailDistanceChanged();
    partial void OntrailDurationChanging(System.Nullable<decimal> value);
    partial void OntrailDurationChanged();
    partial void OnregistryNumberChanging(string value);
    partial void OnregistryNumberChanged();
    #endregion
		
		public Product()
		{
			this._ContactProducts = new EntitySet<ContactProduct>(new Action<ContactProduct>(this.attach_ContactProducts), new Action<ContactProduct>(this.detach_ContactProducts));
			this._Medias = new EntitySet<Media>(new Action<Media>(this.attach_Medias), new Action<Media>(this.detach_Medias));
			this._PrintVersionTranslations = new EntitySet<PrintVersionTranslation>(new Action<PrintVersionTranslation>(this.attach_PrintVersionTranslations), new Action<PrintVersionTranslation>(this.detach_PrintVersionTranslations));
			this._ProductAttributes = new EntitySet<ProductAttribute>(new Action<ProductAttribute>(this.attach_ProductAttributes), new Action<ProductAttribute>(this.detach_ProductAttributes));
			this._ProductDescriptions = new EntitySet<ProductDescription>(new Action<ProductDescription>(this.attach_ProductDescriptions), new Action<ProductDescription>(this.detach_ProductDescriptions));
			this._ProductNotes = new EntitySet<ProductNote>(new Action<ProductNote>(this.attach_ProductNotes), new Action<ProductNote>(this.detach_ProductNotes));
			this._ProductPaymentTypes = new EntitySet<ProductPaymentType>(new Action<ProductPaymentType>(this.attach_ProductPaymentTypes), new Action<ProductPaymentType>(this.detach_ProductPaymentTypes));
			this._ProductRegionOfOperations = new EntitySet<ProductRegionOfOperation>(new Action<ProductRegionOfOperation>(this.attach_ProductRegionOfOperations), new Action<ProductRegionOfOperation>(this.detach_ProductRegionOfOperations));
			this._ProductTranslations = new EntitySet<ProductTranslation>(new Action<ProductTranslation>(this.attach_ProductTranslations), new Action<ProductTranslation>(this.detach_ProductTranslations));
			this._TranslationStatus = new EntitySet<TranslationStatus>(new Action<TranslationStatus>(this.attach_TranslationStatus), new Action<TranslationStatus>(this.detach_TranslationStatus));
			this._Urls = new EntitySet<Url>(new Action<Url>(this.attach_Urls), new Action<Url>(this.detach_Urls));
			this._ProductCaaRatings = new EntitySet<ProductCaaRating>(new Action<ProductCaaRating>(this.attach_ProductCaaRatings), new Action<ProductCaaRating>(this.detach_ProductCaaRatings));
			this._ProductCanadaSelectRatings = new EntitySet<ProductCanadaSelectRating>(new Action<ProductCanadaSelectRating>(this.attach_ProductCanadaSelectRatings), new Action<ProductCanadaSelectRating>(this.detach_ProductCanadaSelectRatings));
			this._PrintVersion = default(EntityRef<PrintVersion>);
			this._ProductUnitNumbers = new EntitySet<ProductUnitNumber>(new Action<ProductUnitNumber>(this.attach_ProductUnitNumbers), new Action<ProductUnitNumber>(this.detach_ProductUnitNumbers));
			this._OperationPeriods = new EntitySet<OperationPeriod>(new Action<OperationPeriod>(this.attach_OperationPeriods), new Action<OperationPeriod>(this.detach_OperationPeriods));
			this._ProductTags = new EntitySet<ProductTag>(new Action<ProductTag>(this.attach_ProductTags), new Action<ProductTag>(this.detach_ProductTags));
			this._PromotionPeriods = new EntitySet<PromotionPeriod>(new Action<PromotionPeriod>(this.attach_PromotionPeriods), new Action<PromotionPeriod>(this.detach_PromotionPeriods));
			this._refCommunity = default(EntityRef<refCommunity>);
			this._refGuideSection = default(EntityRef<refGuideSection>);
			this._refSubRegion = default(EntityRef<refSubRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeId", DbType="TinyInt NOT NULL")]
		public byte productTypeId
		{
			get
			{
				return this._productTypeId;
			}
			set
			{
				if ((this._productTypeId != value))
				{
					this.OnproductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._productTypeId = value;
					this.SendPropertyChanged("productTypeId");
					this.OnproductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(500)")]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line1", DbType="NVarChar(200)")]
		public string line1
		{
			get
			{
				return this._line1;
			}
			set
			{
				if ((this._line1 != value))
				{
					this.Online1Changing(value);
					this.SendPropertyChanging();
					this._line1 = value;
					this.SendPropertyChanged("line1");
					this.Online1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line2", DbType="NVarChar(200)")]
		public string line2
		{
			get
			{
				return this._line2;
			}
			set
			{
				if ((this._line2 != value))
				{
					this.Online2Changing(value);
					this.SendPropertyChanging();
					this._line2 = value;
					this.SendPropertyChanged("line2");
					this.Online2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line3", DbType="NVarChar(200)")]
		public string line3
		{
			get
			{
				return this._line3;
			}
			set
			{
				if ((this._line3 != value))
				{
					this.Online3Changing(value);
					this.SendPropertyChanging();
					this._line3 = value;
					this.SendPropertyChanged("line3");
					this.Online3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(10)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_communityId", DbType="SmallInt")]
		public System.Nullable<short> communityId
		{
			get
			{
				return this._communityId;
			}
			set
			{
				if ((this._communityId != value))
				{
					if (this._refCommunity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncommunityIdChanging(value);
					this.SendPropertyChanging();
					this._communityId = value;
					this.SendPropertyChanged("communityId");
					this.OncommunityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subRegionId", DbType="SmallInt")]
		public System.Nullable<short> subRegionId
		{
			get
			{
				return this._subRegionId;
			}
			set
			{
				if ((this._subRegionId != value))
				{
					if (this._refSubRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubRegionIdChanging(value);
					this.SendPropertyChanging();
					this._subRegionId = value;
					this.SendPropertyChanged("subRegionId");
					this.OnsubRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proprietor", DbType="NVarChar(300)")]
		public string proprietor
		{
			get
			{
				return this._proprietor;
			}
			set
			{
				if ((this._proprietor != value))
				{
					this.OnproprietorChanging(value);
					this.SendPropertyChanging();
					this._proprietor = value;
					this.SendPropertyChanged("proprietor");
					this.OnproprietorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(300)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web", DbType="NVarChar(300)")]
		public string web
		{
			get
			{
				return this._web;
			}
			set
			{
				if ((this._web != value))
				{
					this.OnwebChanging(value);
					this.SendPropertyChanging();
					this._web = value;
					this.SendPropertyChanged("web");
					this.OnwebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(100)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryPhone", DbType="VarChar(100)")]
		public string secondaryPhone
		{
			get
			{
				return this._secondaryPhone;
			}
			set
			{
				if ((this._secondaryPhone != value))
				{
					this.OnsecondaryPhoneChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhone = value;
					this.SendPropertyChanged("secondaryPhone");
					this.OnsecondaryPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offSeasonPhone", DbType="VarChar(100)")]
		public string offSeasonPhone
		{
			get
			{
				return this._offSeasonPhone;
			}
			set
			{
				if ((this._offSeasonPhone != value))
				{
					this.OnoffSeasonPhoneChanging(value);
					this.SendPropertyChanging();
					this._offSeasonPhone = value;
					this.SendPropertyChanged("offSeasonPhone");
					this.OnoffSeasonPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(100)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollfree", DbType="VarChar(100)")]
		public string tollfree
		{
			get
			{
				return this._tollfree;
			}
			set
			{
				if ((this._tollfree != value))
				{
					this.OntollfreeChanging(value);
					this.SendPropertyChanging();
					this._tollfree = value;
					this.SendPropertyChanged("tollfree");
					this.OntollfreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollfreeAreaId", DbType="TinyInt")]
		public System.Nullable<byte> tollfreeAreaId
		{
			get
			{
				return this._tollfreeAreaId;
			}
			set
			{
				if ((this._tollfreeAreaId != value))
				{
					this.OntollfreeAreaIdChanging(value);
					this.SendPropertyChanging();
					this._tollfreeAreaId = value;
					this.SendPropertyChanged("tollfreeAreaId");
					this.OntollfreeAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservationsOnly", DbType="Bit NOT NULL")]
		public bool reservationsOnly
		{
			get
			{
				return this._reservationsOnly;
			}
			set
			{
				if ((this._reservationsOnly != value))
				{
					this.OnreservationsOnlyChanging(value);
					this.SendPropertyChanging();
					this._reservationsOnly = value;
					this.SendPropertyChanged("reservationsOnly");
					this.OnreservationsOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCheckinMember", DbType="Bit NOT NULL")]
		public bool isCheckinMember
		{
			get
			{
				return this._isCheckinMember;
			}
			set
			{
				if ((this._isCheckinMember != value))
				{
					this.OnisCheckinMemberChanging(value);
					this.SendPropertyChanging();
					this._isCheckinMember = value;
					this.SendPropertyChanged("isCheckinMember");
					this.OnisCheckinMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkInId", DbType="VarChar(10)")]
		public string checkInId
		{
			get
			{
				return this._checkInId;
			}
			set
			{
				if ((this._checkInId != value))
				{
					this.OncheckInIdChanging(value);
					this.SendPropertyChanging();
					this._checkInId = value;
					this.SendPropertyChanged("checkInId");
					this.OncheckInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessCanadaRating", DbType="TinyInt")]
		public System.Nullable<byte> accessCanadaRating
		{
			get
			{
				return this._accessCanadaRating;
			}
			set
			{
				if ((this._accessCanadaRating != value))
				{
					this.OnaccessCanadaRatingChanging(value);
					this.SendPropertyChanging();
					this._accessCanadaRating = value;
					this.SendPropertyChanged("accessCanadaRating");
					this.OnaccessCanadaRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lowRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> lowRate
		{
			get
			{
				return this._lowRate;
			}
			set
			{
				if ((this._lowRate != value))
				{
					this.OnlowRateChanging(value);
					this.SendPropertyChanging();
					this._lowRate = value;
					this.SendPropertyChanged("lowRate");
					this.OnlowRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> highRate
		{
			get
			{
				return this._highRate;
			}
			set
			{
				if ((this._highRate != value))
				{
					this.OnhighRateChanging(value);
					this.SendPropertyChanging();
					this._highRate = value;
					this.SendPropertyChanged("highRate");
					this.OnhighRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extraPersonRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> extraPersonRate
		{
			get
			{
				return this._extraPersonRate;
			}
			set
			{
				if ((this._extraPersonRate != value))
				{
					this.OnextraPersonRateChanging(value);
					this.SendPropertyChanging();
					this._extraPersonRate = value;
					this.SendPropertyChanged("extraPersonRate");
					this.OnextraPersonRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodOfOperationTypeId", DbType="TinyInt NOT NULL")]
		public byte periodOfOperationTypeId
		{
			get
			{
				return this._periodOfOperationTypeId;
			}
			set
			{
				if ((this._periodOfOperationTypeId != value))
				{
					this.OnperiodOfOperationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._periodOfOperationTypeId = value;
					this.SendPropertyChanged("periodOfOperationTypeId");
					this.OnperiodOfOperationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateTypeId", DbType="TinyInt")]
		public System.Nullable<byte> rateTypeId
		{
			get
			{
				return this._rateTypeId;
			}
			set
			{
				if ((this._rateTypeId != value))
				{
					this.OnrateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._rateTypeId = value;
					this.SendPropertyChanged("rateTypeId");
					this.OnrateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratePeriodId", DbType="TinyInt")]
		public System.Nullable<byte> ratePeriodId
		{
			get
			{
				return this._ratePeriodId;
			}
			set
			{
				if ((this._ratePeriodId != value))
				{
					this.OnratePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._ratePeriodId = value;
					this.SendPropertyChanged("ratePeriodId");
					this.OnratePeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryGuideSectionId", DbType="TinyInt")]
		public System.Nullable<byte> primaryGuideSectionId
		{
			get
			{
				return this._primaryGuideSectionId;
			}
			set
			{
				if ((this._primaryGuideSectionId != value))
				{
					if (this._refGuideSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprimaryGuideSectionIdChanging(value);
					this.SendPropertyChanging();
					this._primaryGuideSectionId = value;
					this.SendPropertyChanged("primaryGuideSectionId");
					this.OnprimaryGuideSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openMonth", DbType="TinyInt")]
		public System.Nullable<byte> openMonth
		{
			get
			{
				return this._openMonth;
			}
			set
			{
				if ((this._openMonth != value))
				{
					this.OnopenMonthChanging(value);
					this.SendPropertyChanging();
					this._openMonth = value;
					this.SendPropertyChanged("openMonth");
					this.OnopenMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openDay", DbType="TinyInt")]
		public System.Nullable<byte> openDay
		{
			get
			{
				return this._openDay;
			}
			set
			{
				if ((this._openDay != value))
				{
					this.OnopenDayChanging(value);
					this.SendPropertyChanging();
					this._openDay = value;
					this.SendPropertyChanged("openDay");
					this.OnopenDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closeMonth", DbType="TinyInt")]
		public System.Nullable<byte> closeMonth
		{
			get
			{
				return this._closeMonth;
			}
			set
			{
				if ((this._closeMonth != value))
				{
					this.OncloseMonthChanging(value);
					this.SendPropertyChanging();
					this._closeMonth = value;
					this.SendPropertyChanged("closeMonth");
					this.OncloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closeDay", DbType="TinyInt")]
		public System.Nullable<byte> closeDay
		{
			get
			{
				return this._closeDay;
			}
			set
			{
				if ((this._closeDay != value))
				{
					this.OncloseDayChanging(value);
					this.SendPropertyChanging();
					this._closeDay = value;
					this.SendPropertyChanged("closeDay");
					this.OncloseDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasOffSeasonRates", DbType="Bit NOT NULL")]
		public bool hasOffSeasonRates
		{
			get
			{
				return this._hasOffSeasonRates;
			}
			set
			{
				if ((this._hasOffSeasonRates != value))
				{
					this.OnhasOffSeasonRatesChanging(value);
					this.SendPropertyChanging();
					this._hasOffSeasonRates = value;
					this.SendPropertyChanged("hasOffSeasonRates");
					this.OnhasOffSeasonRatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasOffSeasonDates", DbType="Bit NOT NULL")]
		public bool hasOffSeasonDates
		{
			get
			{
				return this._hasOffSeasonDates;
			}
			set
			{
				if ((this._hasOffSeasonDates != value))
				{
					this.OnhasOffSeasonDatesChanging(value);
					this.SendPropertyChanging();
					this._hasOffSeasonDates = value;
					this.SendPropertyChanged("hasOffSeasonDates");
					this.OnhasOffSeasonDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noTax", DbType="Bit NOT NULL")]
		public bool noTax
		{
			get
			{
				return this._noTax;
			}
			set
			{
				if ((this._noTax != value))
				{
					this.OnnoTaxChanging(value);
					this.SendPropertyChanging();
					this._noTax = value;
					this.SendPropertyChanged("noTax");
					this.OnnoTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancellationPolicyId", DbType="TinyInt")]
		public System.Nullable<byte> cancellationPolicyId
		{
			get
			{
				return this._cancellationPolicyId;
			}
			set
			{
				if ((this._cancellationPolicyId != value))
				{
					this.OncancellationPolicyIdChanging(value);
					this.SendPropertyChanging();
					this._cancellationPolicyId = value;
					this.SendPropertyChanged("cancellationPolicyId");
					this.OncancellationPolicyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileMakerId", DbType="VarChar(10)")]
		public string fileMakerId
		{
			get
			{
				return this._fileMakerId;
			}
			set
			{
				if ((this._fileMakerId != value))
				{
					this.OnfileMakerIdChanging(value);
					this.SendPropertyChanging();
					this._fileMakerId = value;
					this.SendPropertyChanged("fileMakerId");
					this.OnfileMakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parkingSpaces", DbType="SmallInt")]
		public System.Nullable<short> parkingSpaces
		{
			get
			{
				return this._parkingSpaces;
			}
			set
			{
				if ((this._parkingSpaces != value))
				{
					this.OnparkingSpacesChanging(value);
					this.SendPropertyChanging();
					this._parkingSpaces = value;
					this.SendPropertyChanged("parkingSpaces");
					this.OnparkingSpacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seatingCapacityInterior", DbType="SmallInt")]
		public System.Nullable<short> seatingCapacityInterior
		{
			get
			{
				return this._seatingCapacityInterior;
			}
			set
			{
				if ((this._seatingCapacityInterior != value))
				{
					this.OnseatingCapacityInteriorChanging(value);
					this.SendPropertyChanging();
					this._seatingCapacityInterior = value;
					this.SendPropertyChanged("seatingCapacityInterior");
					this.OnseatingCapacityInteriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seatingCapacityExterior", DbType="SmallInt")]
		public System.Nullable<short> seatingCapacityExterior
		{
			get
			{
				return this._seatingCapacityExterior;
			}
			set
			{
				if ((this._seatingCapacityExterior != value))
				{
					this.OnseatingCapacityExteriorChanging(value);
					this.SendPropertyChanging();
					this._seatingCapacityExterior = value;
					this.SendPropertyChanged("seatingCapacityExterior");
					this.OnseatingCapacityExteriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherMemberships", DbType="NVarChar(500)")]
		public string otherMemberships
		{
			get
			{
				return this._otherMemberships;
			}
			set
			{
				if ((this._otherMemberships != value))
				{
					this.OnotherMembershipsChanging(value);
					this.SendPropertyChanging();
					this._otherMemberships = value;
					this.SendPropertyChanged("otherMemberships");
					this.OnotherMembershipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_licenseNumber", DbType="VarChar(50)")]
		public string licenseNumber
		{
			get
			{
				return this._licenseNumber;
			}
			set
			{
				if ((this._licenseNumber != value))
				{
					this.OnlicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._licenseNumber = value;
					this.SendPropertyChanged("licenseNumber");
					this.OnlicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkboxLabel", DbType="VarChar(50)")]
		public string checkboxLabel
		{
			get
			{
				return this._checkboxLabel;
			}
			set
			{
				if ((this._checkboxLabel != value))
				{
					this.OncheckboxLabelChanging(value);
					this.SendPropertyChanging();
					this._checkboxLabel = value;
					this.SendPropertyChanged("checkboxLabel");
					this.OncheckboxLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentReceived", DbType="Bit NOT NULL")]
		public bool paymentReceived
		{
			get
			{
				return this._paymentReceived;
			}
			set
			{
				if ((this._paymentReceived != value))
				{
					this.OnpaymentReceivedChanging(value);
					this.SendPropertyChanging();
					this._paymentReceived = value;
					this.SendPropertyChanged("paymentReceived");
					this.OnpaymentReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> paymentAmount
		{
			get
			{
				return this._paymentAmount;
			}
			set
			{
				if ((this._paymentAmount != value))
				{
					this.OnpaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._paymentAmount = value;
					this.SendPropertyChanged("paymentAmount");
					this.OnpaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendance", DbType="Int")]
		public System.Nullable<int> attendance
		{
			get
			{
				return this._attendance;
			}
			set
			{
				if ((this._attendance != value))
				{
					this.OnattendanceChanging(value);
					this.SendPropertyChanging();
					this._attendance = value;
					this.SendPropertyChanged("attendance");
					this.OnattendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> confirmationDueDate
		{
			get
			{
				return this._confirmationDueDate;
			}
			set
			{
				if ((this._confirmationDueDate != value))
				{
					this.OnconfirmationDueDateChanging(value);
					this.SendPropertyChanging();
					this._confirmationDueDate = value;
					this.SendPropertyChanged("confirmationDueDate");
					this.OnconfirmationDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownershipTypeId", DbType="TinyInt")]
		public System.Nullable<byte> ownershipTypeId
		{
			get
			{
				return this._ownershipTypeId;
			}
			set
			{
				if ((this._ownershipTypeId != value))
				{
					this.OnownershipTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ownershipTypeId = value;
					this.SendPropertyChanged("ownershipTypeId");
					this.OnownershipTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sustainabilityTypeId", DbType="TinyInt")]
		public System.Nullable<byte> sustainabilityTypeId
		{
			get
			{
				return this._sustainabilityTypeId;
			}
			set
			{
				if ((this._sustainabilityTypeId != value))
				{
					this.OnsustainabilityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._sustainabilityTypeId = value;
					this.SendPropertyChanged("sustainabilityTypeId");
					this.OnsustainabilityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacityTypeId", DbType="TinyInt")]
		public System.Nullable<byte> capacityTypeId
		{
			get
			{
				return this._capacityTypeId;
			}
			set
			{
				if ((this._capacityTypeId != value))
				{
					this.OncapacityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._capacityTypeId = value;
					this.SendPropertyChanged("capacityTypeId");
					this.OncapacityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listingQuality", DbType="TinyInt")]
		public System.Nullable<byte> listingQuality
		{
			get
			{
				return this._listingQuality;
			}
			set
			{
				if ((this._listingQuality != value))
				{
					this.OnlistingQualityChanging(value);
					this.SendPropertyChanging();
					this._listingQuality = value;
					this.SendPropertyChanged("listingQuality");
					this.OnlistingQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFeatured", DbType="Bit NOT NULL")]
		public bool isFeatured
		{
			get
			{
				return this._isFeatured;
			}
			set
			{
				if ((this._isFeatured != value))
				{
					this.OnisFeaturedChanging(value);
					this.SendPropertyChanging();
					this._isFeatured = value;
					this.SendPropertyChanged("isFeatured");
					this.OnisFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isTicketed", DbType="Bit NOT NULL")]
		public bool isTicketed
		{
			get
			{
				return this._isTicketed;
			}
			set
			{
				if ((this._isTicketed != value))
				{
					this.OnisTicketedChanging(value);
					this.SendPropertyChanging();
					this._isTicketed = value;
					this.SendPropertyChanged("isTicketed");
					this.OnisTicketedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValid", DbType="Bit NOT NULL")]
		public bool isValid
		{
			get
			{
				return this._isValid;
			}
			set
			{
				if ((this._isValid != value))
				{
					this.OnisValidChanging(value);
					this.SendPropertyChanging();
					this._isValid = value;
					this.SendPropertyChanged("isValid");
					this.OnisValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isComplete", DbType="Bit NOT NULL")]
		public bool isComplete
		{
			get
			{
				return this._isComplete;
			}
			set
			{
				if ((this._isComplete != value))
				{
					this.OnisCompleteChanging(value);
					this.SendPropertyChanging();
					this._isComplete = value;
					this.SendPropertyChanged("isComplete");
					this.OnisCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_overrideErrors", DbType="Bit NOT NULL")]
		public bool overrideErrors
		{
			get
			{
				return this._overrideErrors;
			}
			set
			{
				if ((this._overrideErrors != value))
				{
					this.OnoverrideErrorsChanging(value);
					this.SendPropertyChanging();
					this._overrideErrors = value;
					this.SendPropertyChanged("overrideErrors");
					this.OnoverrideErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedBy", DbType="VarChar(50)")]
		public string lastModifiedBy
		{
			get
			{
				return this._lastModifiedBy;
			}
			set
			{
				if ((this._lastModifiedBy != value))
				{
					this.OnlastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedBy = value;
					this.SendPropertyChanged("lastModifiedBy");
					this.OnlastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastModifiedDate
		{
			get
			{
				return this._lastModifiedDate;
			}
			set
			{
				if ((this._lastModifiedDate != value))
				{
					this.OnlastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._lastModifiedDate = value;
					this.SendPropertyChanged("lastModifiedDate");
					this.OnlastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationLastReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> confirmationLastReceived
		{
			get
			{
				return this._confirmationLastReceived;
			}
			set
			{
				if ((this._confirmationLastReceived != value))
				{
					this.OnconfirmationLastReceivedChanging(value);
					this.SendPropertyChanging();
					this._confirmationLastReceived = value;
					this.SendPropertyChanged("confirmationLastReceived");
					this.OnconfirmationLastReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trailDistance", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> trailDistance
		{
			get
			{
				return this._trailDistance;
			}
			set
			{
				if ((this._trailDistance != value))
				{
					this.OntrailDistanceChanging(value);
					this.SendPropertyChanging();
					this._trailDistance = value;
					this.SendPropertyChanged("trailDistance");
					this.OntrailDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trailDuration", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> trailDuration
		{
			get
			{
				return this._trailDuration;
			}
			set
			{
				if ((this._trailDuration != value))
				{
					this.OntrailDurationChanging(value);
					this.SendPropertyChanging();
					this._trailDuration = value;
					this.SendPropertyChanged("trailDuration");
					this.OntrailDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registryNumber", DbType="VarChar(10)")]
		public string registryNumber
		{
			get
			{
				return this._registryNumber;
			}
			set
			{
				if ((this._registryNumber != value))
				{
					this.OnregistryNumberChanging(value);
					this.SendPropertyChanging();
					this._registryNumber = value;
					this.SendPropertyChanged("registryNumber");
					this.OnregistryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ContactProduct", Storage="_ContactProducts", ThisKey="id", OtherKey="productId")]
		public EntitySet<ContactProduct> ContactProducts
		{
			get
			{
				return this._ContactProducts;
			}
			set
			{
				this._ContactProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Media", Storage="_Medias", ThisKey="id", OtherKey="productId")]
		public EntitySet<Media> Medias
		{
			get
			{
				return this._Medias;
			}
			set
			{
				this._Medias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PrintVersionTranslation", Storage="_PrintVersionTranslations", ThisKey="id", OtherKey="productId")]
		public EntitySet<PrintVersionTranslation> PrintVersionTranslations
		{
			get
			{
				return this._PrintVersionTranslations;
			}
			set
			{
				this._PrintVersionTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductAttribute", Storage="_ProductAttributes", ThisKey="id,productTypeId", OtherKey="productId,productTypeId")]
		public EntitySet<ProductAttribute> ProductAttributes
		{
			get
			{
				return this._ProductAttributes;
			}
			set
			{
				this._ProductAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDescription", Storage="_ProductDescriptions", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductDescription> ProductDescriptions
		{
			get
			{
				return this._ProductDescriptions;
			}
			set
			{
				this._ProductDescriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductNote", Storage="_ProductNotes", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductNote> ProductNotes
		{
			get
			{
				return this._ProductNotes;
			}
			set
			{
				this._ProductNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductPaymentType", Storage="_ProductPaymentTypes", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductPaymentType> ProductPaymentTypes
		{
			get
			{
				return this._ProductPaymentTypes;
			}
			set
			{
				this._ProductPaymentTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductRegionOfOperation", Storage="_ProductRegionOfOperations", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductRegionOfOperation> ProductRegionOfOperations
		{
			get
			{
				return this._ProductRegionOfOperations;
			}
			set
			{
				this._ProductRegionOfOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductTranslation", Storage="_ProductTranslations", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductTranslation> ProductTranslations
		{
			get
			{
				return this._ProductTranslations;
			}
			set
			{
				this._ProductTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_TranslationStatus", Storage="_TranslationStatus", ThisKey="id", OtherKey="productId")]
		public EntitySet<TranslationStatus> TranslationStatus
		{
			get
			{
				return this._TranslationStatus;
			}
			set
			{
				this._TranslationStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Url", Storage="_Urls", ThisKey="id", OtherKey="productId")]
		public EntitySet<Url> Urls
		{
			get
			{
				return this._Urls;
			}
			set
			{
				this._Urls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCaaRating", Storage="_ProductCaaRatings", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductCaaRating> ProductCaaRatings
		{
			get
			{
				return this._ProductCaaRatings;
			}
			set
			{
				this._ProductCaaRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCanadaSelectRating", Storage="_ProductCanadaSelectRatings", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductCanadaSelectRating> ProductCanadaSelectRatings
		{
			get
			{
				return this._ProductCanadaSelectRatings;
			}
			set
			{
				this._ProductCanadaSelectRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PrintVersion", Storage="_PrintVersion", ThisKey="id", OtherKey="productId", IsUnique=true, IsForeignKey=false)]
		public PrintVersion PrintVersion
		{
			get
			{
				return this._PrintVersion.Entity;
			}
			set
			{
				PrintVersion previousValue = this._PrintVersion.Entity;
				if (((previousValue != value) 
							|| (this._PrintVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintVersion.Entity = null;
						previousValue.Product = null;
					}
					this._PrintVersion.Entity = value;
					if ((value != null))
					{
						value.Product = this;
					}
					this.SendPropertyChanged("PrintVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductUnitNumber", Storage="_ProductUnitNumbers", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductUnitNumber> ProductUnitNumbers
		{
			get
			{
				return this._ProductUnitNumbers;
			}
			set
			{
				this._ProductUnitNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OperationPeriod", Storage="_OperationPeriods", ThisKey="id", OtherKey="productId")]
		public EntitySet<OperationPeriod> OperationPeriods
		{
			get
			{
				return this._OperationPeriods;
			}
			set
			{
				this._OperationPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductTag", Storage="_ProductTags", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductTag> ProductTags
		{
			get
			{
				return this._ProductTags;
			}
			set
			{
				this._ProductTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PromotionPeriod", Storage="_PromotionPeriods", ThisKey="id", OtherKey="productId")]
		public EntitySet<PromotionPeriod> PromotionPeriods
		{
			get
			{
				return this._PromotionPeriods;
			}
			set
			{
				this._PromotionPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refCommunity_Product", Storage="_refCommunity", ThisKey="communityId", OtherKey="id", IsForeignKey=true)]
		public refCommunity refCommunity
		{
			get
			{
				return this._refCommunity.Entity;
			}
			set
			{
				refCommunity previousValue = this._refCommunity.Entity;
				if (((previousValue != value) 
							|| (this._refCommunity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refCommunity.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._refCommunity.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._communityId = value.id;
					}
					else
					{
						this._communityId = default(Nullable<short>);
					}
					this.SendPropertyChanged("refCommunity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refGuideSection_Product", Storage="_refGuideSection", ThisKey="primaryGuideSectionId", OtherKey="id", IsForeignKey=true)]
		public refGuideSection refGuideSection
		{
			get
			{
				return this._refGuideSection.Entity;
			}
			set
			{
				refGuideSection previousValue = this._refGuideSection.Entity;
				if (((previousValue != value) 
							|| (this._refGuideSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refGuideSection.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._refGuideSection.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._primaryGuideSectionId = value.id;
					}
					else
					{
						this._primaryGuideSectionId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("refGuideSection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="refSubRegion_Product", Storage="_refSubRegion", ThisKey="subRegionId", OtherKey="id", IsForeignKey=true)]
		public refSubRegion refSubRegion
		{
			get
			{
				return this._refSubRegion.Entity;
			}
			set
			{
				refSubRegion previousValue = this._refSubRegion.Entity;
				if (((previousValue != value) 
							|| (this._refSubRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._refSubRegion.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._refSubRegion.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._subRegionId = value.id;
					}
					else
					{
						this._subRegionId = default(Nullable<short>);
					}
					this.SendPropertyChanged("refSubRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactProducts(ContactProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ContactProducts(ContactProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Medias(Media entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Medias(Media entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_PrintVersionTranslations(PrintVersionTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_PrintVersionTranslations(PrintVersionTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductDescriptions(ProductDescription entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductDescriptions(ProductDescription entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductNotes(ProductNote entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductNotes(ProductNote entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductPaymentTypes(ProductPaymentType entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductPaymentTypes(ProductPaymentType entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductRegionOfOperations(ProductRegionOfOperation entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductRegionOfOperations(ProductRegionOfOperation entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductTranslations(ProductTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductTranslations(ProductTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_TranslationStatus(TranslationStatus entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_TranslationStatus(TranslationStatus entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Urls(Url entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Urls(Url entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductCaaRatings(ProductCaaRating entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductCaaRatings(ProductCaaRating entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductCanadaSelectRatings(ProductCanadaSelectRating entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductCanadaSelectRatings(ProductCanadaSelectRating entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductUnitNumbers(ProductUnitNumber entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductUnitNumbers(ProductUnitNumber entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_OperationPeriods(OperationPeriod entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OperationPeriods(OperationPeriod entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductTags(ProductTag entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductTags(ProductTag entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_PromotionPeriods(PromotionPeriod entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_PromotionPeriods(PromotionPeriod entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	public partial class SearchBusinessesResult
	{
		
		private int _businessId;
		
		private string _businessName;
		
		private System.Nullable<int> _contactId;
		
		private string _contactFirstName;
		
		private string _contactLastName;
		
		private string _phoneNumber;
		
		private string _email;
		
		public SearchBusinessesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessId", DbType="Int NOT NULL")]
		public int businessId
		{
			get
			{
				return this._businessId;
			}
			set
			{
				if ((this._businessId != value))
				{
					this._businessId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessName", DbType="VarChar(100)")]
		public string businessName
		{
			get
			{
				return this._businessName;
			}
			set
			{
				if ((this._businessName != value))
				{
					this._businessName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int")]
		public System.Nullable<int> contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					this._contactId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactFirstName", DbType="NVarChar(100)")]
		public string contactFirstName
		{
			get
			{
				return this._contactFirstName;
			}
			set
			{
				if ((this._contactFirstName != value))
				{
					this._contactFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactLastName", DbType="NVarChar(100)")]
		public string contactLastName
		{
			get
			{
				return this._contactLastName;
			}
			set
			{
				if ((this._contactLastName != value))
				{
					this._contactLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(50)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this._phoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
	}
	
	public partial class GetBusinessNamesResult
	{
		
		private int _id;
		
		private string _businessName;
		
		public GetBusinessNamesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessName", DbType="VarChar(100)")]
		public string businessName
		{
			get
			{
				return this._businessName;
			}
			set
			{
				if ((this._businessName != value))
				{
					this._businessName = value;
				}
			}
		}
	}
	
	public partial class SearchProductsResult
	{
		
		private int _productId;
		
		private string _productName;
		
		private byte _productTypeId;
		
		private string _communityName;
		
		private string _regionName;
		
		private int _contactId;
		
		private string _firstName;
		
		private string _lastName;
		
		private int _businessId;
		
		private string _businessName;
		
		private bool _isActive;
		
		private bool _isValid;
		
		private bool _overrideErrors;
		
		public SearchProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this._productId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this._productName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeId", DbType="TinyInt NOT NULL")]
		public byte productTypeId
		{
			get
			{
				return this._productTypeId;
			}
			set
			{
				if ((this._productTypeId != value))
				{
					this._productTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_communityName", DbType="VarChar(50)")]
		public string communityName
		{
			get
			{
				return this._communityName;
			}
			set
			{
				if ((this._communityName != value))
				{
					this._communityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionName", DbType="VarChar(100)")]
		public string regionName
		{
			get
			{
				return this._regionName;
			}
			set
			{
				if ((this._regionName != value))
				{
					this._regionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int NOT NULL")]
		public int contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					this._contactId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(100)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this._firstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(100)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this._lastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessId", DbType="Int NOT NULL")]
		public int businessId
		{
			get
			{
				return this._businessId;
			}
			set
			{
				if ((this._businessId != value))
				{
					this._businessId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessName", DbType="NVarChar(300)")]
		public string businessName
		{
			get
			{
				return this._businessName;
			}
			set
			{
				if ((this._businessName != value))
				{
					this._businessName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this._isActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValid", DbType="Bit NOT NULL")]
		public bool isValid
		{
			get
			{
				return this._isValid;
			}
			set
			{
				if ((this._isValid != value))
				{
					this._isValid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_overrideErrors", DbType="Bit NOT NULL")]
		public bool overrideErrors
		{
			get
			{
				return this._overrideErrors;
			}
			set
			{
				if ((this._overrideErrors != value))
				{
					this._overrideErrors = value;
				}
			}
		}
	}
	
	public partial class SearchContactsResult
	{
		
		private int _contactId;
		
		private string _firstName;
		
		private string _lastName;
		
		private byte _contactTypeId;
		
		private bool _isPrimary;
		
		private string _phoneNumber;
		
		private string _email;
		
		private string _jobTitle;
		
		public SearchContactsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="Int NOT NULL")]
		public int contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					this._contactId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(100)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this._firstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(100)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this._lastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactTypeId", DbType="TinyInt NOT NULL")]
		public byte contactTypeId
		{
			get
			{
				return this._contactTypeId;
			}
			set
			{
				if ((this._contactTypeId != value))
				{
					this._contactTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit NOT NULL")]
		public bool isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this._isPrimary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(50)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this._phoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitle", DbType="NVarChar(100)")]
		public string jobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this._jobTitle = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
